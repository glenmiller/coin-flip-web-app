{
  "contractName": "CoinFlip",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "wonFlag",
          "type": "bool"
        }
      ],
      "name": "betResults",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "errorMessage",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "userAddressMap",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userDataMap",
      "outputs": [
        {
          "internalType": "bool",
          "name": "headTailFlag",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "betValue",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "inQueryId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "inResult",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "inProof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "inHeadTailFlag",
          "type": "bool"
        }
      ],
      "name": "bet",
      "outputs": [
        {
          "internalType": "bool",
          "name": "successFlag",
          "type": "bool"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "depositETH",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"wonFlag\",\"type\":\"bool\"}],\"name\":\"betResults\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"errorMessage\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"inQueryId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"inResult\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"inProof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"inHeadTailFlag\",\"type\":\"bool\"}],\"name\":\"bet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"successFlag\",\"type\":\"bool\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"userAddressMap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userDataMap\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"headTailFlag\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"betValue\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"__callback(bytes32,string)\":{\"details\":\"The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/glenm/Development/com/ivanontech/academy/coin-flip/coin-flip-eth/contracts/CoinFlip.sol\":\"CoinFlip\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/glenm/Development/com/ivanontech/academy/coin-flip/coin-flip-eth/contracts/CoinFlip.sol\":{\"keccak256\":\"0x6433a16bca9baf4b8d806a3484fc77f3a32ae887078adb82acd6c20d500c904a\",\"urls\":[\"bzz-raw://ed22d264d2eb09c508c7e5207d2f5b09f539b634ec31a69a19dad4e346e7083a\",\"dweb:/ipfs/QmbRLDnNioCheqLHYAeyXQdp14aQT7ZhNgZ5jgRgecwqWD\"]},\"/C/Users/glenm/Development/com/ivanontech/academy/coin-flip/coin-flip-eth/contracts/provableAPI.sol\":{\"keccak256\":\"0x194e0f6f1b2cf2eca7204430e81ebd6cc6ca449350b04ffcc9bb17c24a8094fc\",\"urls\":[\"bzz-raw://afbe8ed8f8729fc3622144a244e9f64e0fb91084828ab68e9508aa0babe44e6e\",\"dweb:/ipfs/QmTBzJ6hvap4Ark27NGPU4HyY9F6tTcR5PxMkMvQRxzeLu\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5062000027603060f81b6200002d60201b60201c565b62000a4e565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480620000bd57506000620000bb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166200039060201b60201c565b145b15620000d757620000d560006200039b60201b60201c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200014257600080fd5b505af115801562000157573d6000803e3d6000fd5b505050506040513d60208110156200016e57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614620002bb57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200023e57600080fd5b505af115801562000253573d6000803e3d6000fd5b505050506040513d60208110156200026a57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663688dcfd7826040518263ffffffff1660e01b815260040180827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001915050600060405180830381600087803b1580156200037457600080fd5b505af115801562000389573d6000803e3d6000fd5b5050505050565b6000813b9050919050565b6000620003ad620003b460201b60201c565b9050919050565b600080620003dc731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6200039060201b60201c565b11156200048857731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200047e6040518060400160405280600b81526020017f6574685f6d61696e6e65740000000000000000000000000000000000000000008152506200098360201b60201c565b6001905062000980565b6000620004af73c03a2615d5efaf5f49f60b7bb6583eaec212fdf16200039060201b60201c565b11156200055b5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620005516040518060400160405280600c81526020017f6574685f726f707374656e3300000000000000000000000000000000000000008152506200098360201b60201c565b6001905062000980565b60006200058273b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6200039060201b60201c565b11156200062e5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620006246040518060400160405280600981526020017f6574685f6b6f76616e00000000000000000000000000000000000000000000008152506200098360201b60201c565b6001905062000980565b60006200065573146500cfd35b22e4a392fe0adc06de1a1368ed486200039060201b60201c565b1115620007015773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620006f76040518060400160405280600b81526020017f6574685f72696e6b6562790000000000000000000000000000000000000000008152506200098360201b60201c565b6001905062000980565b60006200072873a2998efd205fb9d4b4963afb70778d6354ad3a416200039060201b60201c565b1115620007d45773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620007ca6040518060400160405280600a81526020017f6574685f676f65726c69000000000000000000000000000000000000000000008152506200098360201b60201c565b6001905062000980565b6000620007fb736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756200039060201b60201c565b11156200086157736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062000980565b6000620008887320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6200039060201b60201c565b1115620008ee577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062000980565b6000620009157351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6200039060201b60201c565b11156200097b577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062000980565b600090505b90565b80600290805190602001906200099b9291906200099f565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620009e257805160ff191683800117855562000a13565b8280016001018555821562000a13579182015b8281111562000a12578251825591602001919060010190620009f5565b5b50905062000a22919062000a26565b5090565b62000a4b91905b8082111562000a4757600081600090555060010162000a2d565b5090565b90565b61390e8062000a5e6000396000f3fe6080604052600436106100555760003560e01c806327dc297e1461005a57806338bbfa501461012c578063523afb0d14610295578063560d7a27146102dd5780638e9ca7a114610358578063f6326fb3146103c8575b600080fd5b34801561006657600080fd5b5061012a6004803603604081101561007d57600080fd5b8101908080359060200190929190803590602001906401000000008111156100a457600080fd5b8201836020820111156100b657600080fd5b803590602001918460018302840111640100000000831117156100d857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506103d2565b005b34801561013857600080fd5b506102936004803603606081101561014f57600080fd5b81019080803590602001909291908035906020019064010000000081111561017657600080fd5b82018360208201111561018857600080fd5b803590602001918460018302840111640100000000831117156101aa57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561020d57600080fd5b82018360208201111561021f57600080fd5b8035906020019184600183028401116401000000008311171561024157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610415565b005b6102c3600480360360208110156102ab57600080fd5b81019080803515159060200190929190505050610571565b604051808215151515815260200191505060405180910390f35b3480156102e957600080fd5b506103166004803603602081101561030057600080fd5b810190808035906020019092919050505061075f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561036457600080fd5b506103a76004803603602081101561037b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610792565b60405180831515151581526020018281526020019250505060405180910390f35b6103d06107c3565b005b610411828260006040519080825280601f01601f19166020018201604052801561040b5781602001600182028038833980820191505090505b50610415565b5050565b61041d6107c5565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461045457600080fd5b6000610461848484610ae2565b60ff161461046e57610536565b60006005600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006002846040516020018082805190602001908083835b602083106104e157805182526020820191506020810190506020830392506104be565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c8161052657fe5b0690506105338282610c12565b50505b6005600084815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505050565b600061057b613797565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900460ff1615151515815260200160018201548152505090506000816020015114156106ec57828160000190151590811515815250503481602001818152505080600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015590505060006106926000600162030d40610de8565b9050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610755565b7f0a57a1b34cbb6b1e06b8b22be21efd71de17250f818bad53ccdc7af9135351996040518080602001828103825260108152602001807f416c726561647920506c6179696e67210000000000000000000000000000000081525060200191505060405180910390a15b6001915050919050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154905082565b565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061084d5750600061084b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611383565b145b1561085e5761085c600061138e565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156108c857600080fd5b505af11580156108dc573d6000803e3d6000fd5b505050506040513d60208110156108f257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a3b57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156109c057600080fd5b505af11580156109d4573d6000803e3d6000fd5b505050506040513d60208110156109ea57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610aa257600080fd5b505afa158015610ab6573d6000803e3d6000fd5b505050506040513d6020811015610acc57600080fd5b8101908080519060200190929190505050905090565b60007f4c0000000000000000000000000000000000000000000000000000000000000082600081518110610b1257fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141580610ba557507f500000000000000000000000000000000000000000000000000000000000000082600181518110610b7557fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b80610bd15750600160ff1682600281518110610bbd57fe5b602001015160f81c60f81b60f81c60ff1614155b15610bdf5760019050610c0b565b6000610bf4838686610bef61139f565b611441565b905080610c05576002915050610c0b565b60009150505b9392505050565b6000809050610c1f613797565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900460ff1615151515815260200160018201548152505090506000808414610ca0576001610ca3565b60005b9050801515826000015115151415610d14576001925060006002836020015102905060008690508073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610d10573d6000803e3d6000fd5b5050505b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549060ff0219169055600182016000905550507f5b29a57348de5e70d48abf9fbdf5094bb6cff88a1da40e6128c9cfa22703455a8584604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a15050505050565b60008083118015610dfa575060208311155b610e0357600080fd5b600a84029350606060016040519080825280601f01601f191660200182016040528015610e3f5781602001600182028038833980820191505090505b5090508360f81b81600081518110610e5357fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f191660200182016040528015610eb85781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f191660200182016040528015610ef15781602001600182028038833980820191505090505b5090506000610efe611aec565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f191660200182016040528015610f525781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f191660200182016040528015610f915781602001600182028038833980820191505090505b509050610fa48260186008846000611e09565b50610fad6137b3565b604051806080016040528087815260200188815260200186815260200184815250905060006110126040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c611e68565b9050606060086040519080825280601f01601f19166020018201604052801561104a5781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a01000000000000000000000000000000000000000000000000000081046022830153790100000000000000000000000000000000000000000000000000810460218301537801000000000000000000000000000000000000000000000000810460208301535061137082828560016004811061118957fe5b602002015160028760006004811061119d57fe5b60200201516040518082805190602001908083835b602083106111d557805182526020820191506020810190506020830392506111b2565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015611217573d6000803e3d6000fd5b5050506040513d602081101561122c57600080fd5b81019080805190602001909291905050508760026004811061124a57fe5b60200201516040516020018085805190602001908083835b602083106112855780518252602082019150602081019050602083039250611262565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b602083106112d657805182526020820191506020810190506020830392506112b3565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b6020831061132d578051825260208201915060208101905060208303925061130a565b6001836020036101000a038019825116818451168082178552505050505050905001945050505050604051602081830303815290604052805190602001206121d5565b8199505050505050505050509392505050565b6000813b9050919050565b60006113986121f1565b9050919050565b606060028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114375780601f1061140c57610100808354040283529160200191611437565b820191906000526020600020905b81548152906001019060200180831161141a57829003601f168201915b5050505050905090565b600080602060028760458151811061145557fe5b602001015160f81c60f81b60f81c60ff1601604401019050606060206040519080825280601f01601f1916602001820160405280156114a35781602001600182028038833980820191505090505b5090506114b587836020846000611e09565b50600284876040516020018083805190602001908083835b602083106114f057805182526020820191506020810190506020830392506114cd565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831061155e578051825260208201915060208101905060208303925061153b565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa1580156115a0573d6000803e3d6000fd5b5050506040513d60208110156115b557600080fd5b8101908080519060200190929190505050604051602001808281526020019150506040516020818303038152906040528051906020012081805190602001201461160457600092505050611ae4565b6060600288600160498601018151811061161a57fe5b602001015160f81c60f81b60f81c60ff16016040519080825280601f01601f19166020018201604052801561165e5781602001600182028038833980820191505090505b50905061167388604985018351846000611e09565b5061173e6002826040518082805190602001908083835b602083106116ad578051825260208201915060208101905060208303925061168a565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa1580156116ef573d6000803e3d6000fd5b5050506040513d602081101561170457600080fd5b8101908080519060200190929190505050878a600860208801018151811061172857fe5b602001015160f81c60f81b60f81c60ff16612748565b61174e5760009350505050611ae4565b606060296040519080825280601f01601f1916602001820160405280156117845781602001600182028038833980820191505090505b50905061179989602086016029846000611e09565b506060604080519080825280601f01601f1916602001820160405280156117cf5781602001600182028038833980820191505090505b50905060006041845160296020890101010190506117f58b604083036040856000611e09565b5060006002836040518082805190602001908083835b6020831061182e578051825260208201915060208101905060208303925061180b565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015611870573d6000803e3d6000fd5b5050506040513d602081101561188557600080fd5b8101908080519060200190929190505050905083816040516020018083805190602001908083835b602083106118d057805182526020820191506020810190506020830392506118ad565b6001836020036101000a0380198251168184511680821785525050505050509050018281526020019250505060405160208183030381529060405280519060200120600360008d815260200190815260200160002054141561194857600360008c815260200190815260200160002060009055611958565b6000975050505050505050611ae4565b606060496040519080825280601f01601f19166020018201604052801561198e5781602001600182028038833980820191505090505b5090506119a08d896049846000611e09565b50611a496002826040518082805190602001908083835b602083106119da57805182526020820191506020810190506020830392506119b7565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015611a1c573d6000803e3d6000fd5b5050506040513d6020811015611a3157600080fd5b810190808051906020019092919050505087866127f8565b611a5e57600098505050505050505050611ae4565b6004600083815260200190815260200160002060009054906101000a900460ff16611ab857611a8d8d846129b6565b6004600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505b6004600083815260200190815260200160002060009054906101000a900460ff16985050505050505050505b949350505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611b7457506000611b72600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611383565b145b15611b8557611b83600061138e565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611bef57600080fd5b505af1158015611c03573d6000803e3d6000fd5b505050506040513d6020811015611c1957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611d6257600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611ce757600080fd5b505af1158015611cfb573d6000803e3d6000fd5b505050506040513d6020811015611d1157600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b158015611dc957600080fd5b505afa158015611ddd573d6000803e3d6000fd5b505050506040513d6020811015611df357600080fd5b8101908080519060200190929190505050905090565b6060600082850190508084511015611e2057600080fd5b600086602001905060008460200190505b868860200101821015611e595781890151808288015250602082019150602081019050611e31565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611ef057506000611eee600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611383565b145b15611f0157611eff600061138e565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611f6b57600080fd5b505af1158015611f7f573d6000803e3d6000fd5b505050506040513d6020811015611f9557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146120de57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561206357600080fd5b505af1158015612077573d6000803e3d6000fd5b505050506040513d602081101561208d57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6060600460405190808252806020026020018201604052801561211557816020015b60608152602001906001900390816121005790505b5090508360006004811061212557fe5b60200201518160008151811061213757fe5b60200260200101819052508360016004811061214f57fe5b60200201518160018151811061216157fe5b60200260200101819052508360026004811061217957fe5b60200201518160028151811061218b57fe5b6020026020010181905250836003600481106121a357fe5b6020020151816003815181106121b557fe5b60200260200101819052506121cb858285612dce565b9150509392505050565b8060036000848152602001908152602001600020819055505050565b600080612211731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611383565b11156122b357731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506122aa6040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250613330565b60019050612745565b60006122d273c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611383565b11156123745773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061236b6040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250613330565b60019050612745565b600061239373b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611383565b11156124355773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061242c6040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250613330565b60019050612745565b600061245473146500cfd35b22e4a392fe0adc06de1a1368ed48611383565b11156124f65773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506124ed6040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250613330565b60019050612745565b600061251573a2998efd205fb9d4b4963afb70778d6354ad3a41611383565b11156125b75773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506125ae6040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250613330565b60019050612745565b60006125d6736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611383565b111561263a57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612745565b60006126597320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611383565b11156126bd577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612745565b60006126dc7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611383565b1115612740577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612745565b600090505b90565b600080600190508284511461275c57600080fd5b60008090505b838110156127ec5784818151811061277657fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168682602081106127af57fe5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146127df57600091505b8080600101915050612762565b50809150509392505050565b6000806000806000606060206040519080825280601f01601f1916602001820160405280156128365781602001600182028038833980820191505090505b509050600060208960038151811061284a57fe5b602001015160f81c60f81b60f81c60ff1603600401905061287089826020856000611e09565b9150606060206040519080825280601f01601f1916602001820160405280156128a85781602001600182028038833980820191505090505b5090506022820191506128e48a60208c60018603815181106128c657fe5b602001015160f81c60f81b60f81c60ff160384016020846000611e09565b905060208301519450602081015193506129018b601b878761334a565b80975081985050508573ffffffffffffffffffffffffffffffffffffffff16898051906020012060001c73ffffffffffffffffffffffffffffffffffffffff1614156129575760019750505050505050506129af565b6129648b601c878761334a565b80975081985050508573ffffffffffffffffffffffffffffffffffffffff16898051906020012060001c73ffffffffffffffffffffffffffffffffffffffff16149750505050505050505b9392505050565b600080606060028560018601815181106129cc57fe5b602001015160f81c60f81b60f81c60ff16016040519080825280601f01601f191660200182016040528015612a105781602001600182028038833980820191505090505b509050612a2285858351846000611e09565b506060604080519080825280601f01601f191660200182016040528015612a585781602001600182028038833980820191505090505b509050612a6b8660046040846000611e09565b50606060626040519080825280601f01601f191660200182016040528015612aa25781602001600182028038833980820191505090505b509050600160f81b81600081518110612ab757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612af887604188036041846001611e09565b5060606040518060400160405280602081526020017ffd94fa71bc0ba10d39d464d0d8f465efeef0a2764e3887fcc9df41ded20f505c8152509050612b438160006020856042611e09565b50612bec6002836040518082805190602001908083835b60208310612b7d5780518252602082019150602081019050602083039250612b5a565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015612bbf573d6000803e3d6000fd5b5050506040513d6020811015612bd457600080fd5b810190808051906020019092919050505085856127f8565b945084612c0157600095505050505050612dc8565b606060405180606001604052806040815260200161389a604091399050606060426040519080825280601f01601f191660200182016040528015612c545781602001600182028038833980820191505090505b50905060fe60f81b81600081518110612c6957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612ca88a60036041846001611e09565b50606060028b604581518110612cba57fe5b602001015160f81c60f81b60f81c60ff16016040519080825280601f01601f191660200182016040528015612cfe5781602001600182028038833980820191505090505b509050612d118b60448351846000611e09565b50612dba6002836040518082805190602001908083835b60208310612d4b5780518252602082019150602081019050602083039250612d28565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015612d8d573d6000803e3d6000fd5b5050506040513d6020811015612da257600080fd5b810190808051906020019092919050505082856127f8565b975087985050505050505050505b92915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480612e5657506000612e54600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611383565b145b15612e6757612e65600061138e565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612ed157600080fd5b505af1158015612ee5573d6000803e3d6000fd5b505050506040513d6020811015612efb57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461304457600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612fc957600080fd5b505af1158015612fdd573d6000803e3d6000fd5b505050506040513d6020811015612ff357600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156130da5780820151818401526020810190506130bf565b50505050905090810190601f1680156131075780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561312757600080fd5b505af115801561313b573d6000803e3d6000fd5b505050506040513d602081101561315157600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a764000001811115613184576000801b915050613329565b606061318f8561338e565b90506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015613233578082015181840152602081019050613218565b50505050905090810190601f1680156132605780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b8381101561329957808201518184015260208101905061327e565b50505050905090810190601f1680156132c65780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b1580156132e857600080fd5b505af11580156132fc573d6000803e3d6000fd5b50505050506040513d602081101561331357600080fd5b8101908080519060200190929190505050925050505b9392505050565b80600290805190602001906133469291906137da565b5050565b60008060008060405188815287602082015286604082015285606082015260208160808360006001610bb8f192508051915050818193509350505094509492505050565b606061339861340e565b6133a061385a565b6133ac8161040061341a565b6133b581613464565b60008090505b83518110156133f7576133ea8482815181106133d357fe5b60200260200101518361347290919063ffffffff16565b80806001019150506133bb565b5061340181613497565b8060000151915050919050565b60405180590338823950565b600081905060006020828161342b57fe5b0614613444576020818161343b57fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b61346f8160046134a5565b50565b61347f82600283516134c6565b613492818361360690919063ffffffff16565b505050565b6134a28160076134a5565b50565b6134c2601f60058360ff16901b17836136b190919063ffffffff16565b5050565b601781116134f2576134ed8160058460ff16901b60ff1617846136b190919063ffffffff16565b613601565b60ff811161353357613517601860058460ff16901b17846136b190919063ffffffff16565b61352d816001856136f19092919063ffffffff16565b50613600565b61ffff811161357557613559601960058460ff16901b17846136b190919063ffffffff16565b61356f816002856136f19092919063ffffffff16565b506135ff565b63ffffffff81116135b95761359d601a60058460ff16901b17846136b190919063ffffffff16565b6135b3816004856136f19092919063ffffffff16565b506135fe565b67ffffffffffffffff81116135fd576135e5601b60058460ff16901b17846136b190919063ffffffff16565b6135fb816008856136f19092919063ffffffff16565b505b5b5b5b5b505050565b61360e61385a565b8260200151836000015151835101111561363e5761363d83600261363786602001518651613758565b02613774565b5b60008060008451905085518051602081830101945086518101825260208701935050505b602081106136855781518352602083019250602082019150602081039050613662565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b816020015160018360000151510111156136d7576136d6826002846020015102613774565b5b815180516020818301018381536001820183525050505050565b6136f961385a565b83602001518460000151518301111561372757613726846002613720876020015186613758565b02613774565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b60008183111561376a5782905061376e565b8190505b92915050565b606082600001519050613787838361341a565b6137918382613606565b50505050565b6040518060400160405280600015158152602001600081525090565b60405180608001604052806004905b60608152602001906001900390816137c25790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061381b57805160ff1916838001178555613849565b82800160010185558215613849579182015b8281111561384857825182559160200191906001019061382d565b5b5090506138569190613874565b5090565b604051806040016040528060608152602001600081525090565b61389691905b8082111561389257600081600090555060010161387a565b5090565b9056fe7fb956469c5c9b89840d55b43537e66a98dd4811ea0a27224272c2e5622911e8537a2f8e86a46baec82864e98dd01e9ccc2f8bc5dfc9cbe5a91a290498dd96e4a265627a7a723158201f01ee4de6fba8e981c50c323e7ccd5a47b5895d2cb9551ddb2525d71b590f0f64736f6c634300050c0032",
  "deployedBytecode": "0x6080604052600436106100555760003560e01c806327dc297e1461005a57806338bbfa501461012c578063523afb0d14610295578063560d7a27146102dd5780638e9ca7a114610358578063f6326fb3146103c8575b600080fd5b34801561006657600080fd5b5061012a6004803603604081101561007d57600080fd5b8101908080359060200190929190803590602001906401000000008111156100a457600080fd5b8201836020820111156100b657600080fd5b803590602001918460018302840111640100000000831117156100d857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506103d2565b005b34801561013857600080fd5b506102936004803603606081101561014f57600080fd5b81019080803590602001909291908035906020019064010000000081111561017657600080fd5b82018360208201111561018857600080fd5b803590602001918460018302840111640100000000831117156101aa57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561020d57600080fd5b82018360208201111561021f57600080fd5b8035906020019184600183028401116401000000008311171561024157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610415565b005b6102c3600480360360208110156102ab57600080fd5b81019080803515159060200190929190505050610571565b604051808215151515815260200191505060405180910390f35b3480156102e957600080fd5b506103166004803603602081101561030057600080fd5b810190808035906020019092919050505061075f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561036457600080fd5b506103a76004803603602081101561037b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610792565b60405180831515151581526020018281526020019250505060405180910390f35b6103d06107c3565b005b610411828260006040519080825280601f01601f19166020018201604052801561040b5781602001600182028038833980820191505090505b50610415565b5050565b61041d6107c5565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461045457600080fd5b6000610461848484610ae2565b60ff161461046e57610536565b60006005600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006002846040516020018082805190602001908083835b602083106104e157805182526020820191506020810190506020830392506104be565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c8161052657fe5b0690506105338282610c12565b50505b6005600084815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505050565b600061057b613797565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900460ff1615151515815260200160018201548152505090506000816020015114156106ec57828160000190151590811515815250503481602001818152505080600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff0219169083151502179055506020820151816001015590505060006106926000600162030d40610de8565b9050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610755565b7f0a57a1b34cbb6b1e06b8b22be21efd71de17250f818bad53ccdc7af9135351996040518080602001828103825260108152602001807f416c726561647920506c6179696e67210000000000000000000000000000000081525060200191505060405180910390a15b6001915050919050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60066020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154905082565b565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061084d5750600061084b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611383565b145b1561085e5761085c600061138e565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156108c857600080fd5b505af11580156108dc573d6000803e3d6000fd5b505050506040513d60208110156108f257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610a3b57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156109c057600080fd5b505af11580156109d4573d6000803e3d6000fd5b505050506040513d60208110156109ea57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610aa257600080fd5b505afa158015610ab6573d6000803e3d6000fd5b505050506040513d6020811015610acc57600080fd5b8101908080519060200190929190505050905090565b60007f4c0000000000000000000000000000000000000000000000000000000000000082600081518110610b1257fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141580610ba557507f500000000000000000000000000000000000000000000000000000000000000082600181518110610b7557fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b80610bd15750600160ff1682600281518110610bbd57fe5b602001015160f81c60f81b60f81c60ff1614155b15610bdf5760019050610c0b565b6000610bf4838686610bef61139f565b611441565b905080610c05576002915050610c0b565b60009150505b9392505050565b6000809050610c1f613797565b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900460ff1615151515815260200160018201548152505090506000808414610ca0576001610ca3565b60005b9050801515826000015115151415610d14576001925060006002836020015102905060008690508073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610d10573d6000803e3d6000fd5b5050505b600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549060ff0219169055600182016000905550507f5b29a57348de5e70d48abf9fbdf5094bb6cff88a1da40e6128c9cfa22703455a8584604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001821515151581526020019250505060405180910390a15050505050565b60008083118015610dfa575060208311155b610e0357600080fd5b600a84029350606060016040519080825280601f01601f191660200182016040528015610e3f5781602001600182028038833980820191505090505b5090508360f81b81600081518110610e5357fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350606060206040519080825280601f01601f191660200182016040528015610eb85781602001600182028038833980820191505090505b509050606060206040519080825280601f01601f191660200182016040528015610ef15781602001600182028038833980820191505090505b5090506000610efe611aec565b905060208352424118600143034018602084015260208252806020830152606060206040519080825280601f01601f191660200182016040528015610f525781602001600182028038833980820191505090505b509050886020820152606060086040519080825280601f01601f191660200182016040528015610f915781602001600182028038833980820191505090505b509050610fa48260186008846000611e09565b50610fad6137b3565b604051806080016040528087815260200188815260200186815260200184815250905060006110126040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c611e68565b9050606060086040519080825280601f01601f19166020018201604052801561104a5781602001600182028038833980820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a01000000000000000000000000000000000000000000000000000081046022830153790100000000000000000000000000000000000000000000000000810460218301537801000000000000000000000000000000000000000000000000810460208301535061137082828560016004811061118957fe5b602002015160028760006004811061119d57fe5b60200201516040518082805190602001908083835b602083106111d557805182526020820191506020810190506020830392506111b2565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015611217573d6000803e3d6000fd5b5050506040513d602081101561122c57600080fd5b81019080805190602001909291905050508760026004811061124a57fe5b60200201516040516020018085805190602001908083835b602083106112855780518252602082019150602081019050602083039250611262565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b602083106112d657805182526020820191506020810190506020830392506112b3565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b6020831061132d578051825260208201915060208101905060208303925061130a565b6001836020036101000a038019825116818451168082178552505050505050905001945050505050604051602081830303815290604052805190602001206121d5565b8199505050505050505050509392505050565b6000813b9050919050565b60006113986121f1565b9050919050565b606060028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114375780601f1061140c57610100808354040283529160200191611437565b820191906000526020600020905b81548152906001019060200180831161141a57829003601f168201915b5050505050905090565b600080602060028760458151811061145557fe5b602001015160f81c60f81b60f81c60ff1601604401019050606060206040519080825280601f01601f1916602001820160405280156114a35781602001600182028038833980820191505090505b5090506114b587836020846000611e09565b50600284876040516020018083805190602001908083835b602083106114f057805182526020820191506020810190506020830392506114cd565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831061155e578051825260208201915060208101905060208303925061153b565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa1580156115a0573d6000803e3d6000fd5b5050506040513d60208110156115b557600080fd5b8101908080519060200190929190505050604051602001808281526020019150506040516020818303038152906040528051906020012081805190602001201461160457600092505050611ae4565b6060600288600160498601018151811061161a57fe5b602001015160f81c60f81b60f81c60ff16016040519080825280601f01601f19166020018201604052801561165e5781602001600182028038833980820191505090505b50905061167388604985018351846000611e09565b5061173e6002826040518082805190602001908083835b602083106116ad578051825260208201915060208101905060208303925061168a565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa1580156116ef573d6000803e3d6000fd5b5050506040513d602081101561170457600080fd5b8101908080519060200190929190505050878a600860208801018151811061172857fe5b602001015160f81c60f81b60f81c60ff16612748565b61174e5760009350505050611ae4565b606060296040519080825280601f01601f1916602001820160405280156117845781602001600182028038833980820191505090505b50905061179989602086016029846000611e09565b506060604080519080825280601f01601f1916602001820160405280156117cf5781602001600182028038833980820191505090505b50905060006041845160296020890101010190506117f58b604083036040856000611e09565b5060006002836040518082805190602001908083835b6020831061182e578051825260208201915060208101905060208303925061180b565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015611870573d6000803e3d6000fd5b5050506040513d602081101561188557600080fd5b8101908080519060200190929190505050905083816040516020018083805190602001908083835b602083106118d057805182526020820191506020810190506020830392506118ad565b6001836020036101000a0380198251168184511680821785525050505050509050018281526020019250505060405160208183030381529060405280519060200120600360008d815260200190815260200160002054141561194857600360008c815260200190815260200160002060009055611958565b6000975050505050505050611ae4565b606060496040519080825280601f01601f19166020018201604052801561198e5781602001600182028038833980820191505090505b5090506119a08d896049846000611e09565b50611a496002826040518082805190602001908083835b602083106119da57805182526020820191506020810190506020830392506119b7565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015611a1c573d6000803e3d6000fd5b5050506040513d6020811015611a3157600080fd5b810190808051906020019092919050505087866127f8565b611a5e57600098505050505050505050611ae4565b6004600083815260200190815260200160002060009054906101000a900460ff16611ab857611a8d8d846129b6565b6004600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505b6004600083815260200190815260200160002060009054906101000a900460ff16985050505050505050505b949350505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611b7457506000611b72600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611383565b145b15611b8557611b83600061138e565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611bef57600080fd5b505af1158015611c03573d6000803e3d6000fd5b505050506040513d6020811015611c1957600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611d6257600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611ce757600080fd5b505af1158015611cfb573d6000803e3d6000fd5b505050506040513d6020811015611d1157600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b158015611dc957600080fd5b505afa158015611ddd573d6000803e3d6000fd5b505050506040513d6020811015611df357600080fd5b8101908080519060200190929190505050905090565b6060600082850190508084511015611e2057600080fd5b600086602001905060008460200190505b868860200101821015611e595781890151808288015250602082019150602081019050611e31565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611ef057506000611eee600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611383565b145b15611f0157611eff600061138e565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611f6b57600080fd5b505af1158015611f7f573d6000803e3d6000fd5b505050506040513d6020811015611f9557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146120de57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561206357600080fd5b505af1158015612077573d6000803e3d6000fd5b505050506040513d602081101561208d57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6060600460405190808252806020026020018201604052801561211557816020015b60608152602001906001900390816121005790505b5090508360006004811061212557fe5b60200201518160008151811061213757fe5b60200260200101819052508360016004811061214f57fe5b60200201518160018151811061216157fe5b60200260200101819052508360026004811061217957fe5b60200201518160028151811061218b57fe5b6020026020010181905250836003600481106121a357fe5b6020020151816003815181106121b557fe5b60200260200101819052506121cb858285612dce565b9150509392505050565b8060036000848152602001908152602001600020819055505050565b600080612211731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611383565b11156122b357731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506122aa6040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250613330565b60019050612745565b60006122d273c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611383565b11156123745773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061236b6040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250613330565b60019050612745565b600061239373b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611383565b11156124355773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061242c6040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250613330565b60019050612745565b600061245473146500cfd35b22e4a392fe0adc06de1a1368ed48611383565b11156124f65773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506124ed6040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250613330565b60019050612745565b600061251573a2998efd205fb9d4b4963afb70778d6354ad3a41611383565b11156125b75773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506125ae6040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250613330565b60019050612745565b60006125d6736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611383565b111561263a57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612745565b60006126597320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611383565b11156126bd577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612745565b60006126dc7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611383565b1115612740577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050612745565b600090505b90565b600080600190508284511461275c57600080fd5b60008090505b838110156127ec5784818151811061277657fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168682602081106127af57fe5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146127df57600091505b8080600101915050612762565b50809150509392505050565b6000806000806000606060206040519080825280601f01601f1916602001820160405280156128365781602001600182028038833980820191505090505b509050600060208960038151811061284a57fe5b602001015160f81c60f81b60f81c60ff1603600401905061287089826020856000611e09565b9150606060206040519080825280601f01601f1916602001820160405280156128a85781602001600182028038833980820191505090505b5090506022820191506128e48a60208c60018603815181106128c657fe5b602001015160f81c60f81b60f81c60ff160384016020846000611e09565b905060208301519450602081015193506129018b601b878761334a565b80975081985050508573ffffffffffffffffffffffffffffffffffffffff16898051906020012060001c73ffffffffffffffffffffffffffffffffffffffff1614156129575760019750505050505050506129af565b6129648b601c878761334a565b80975081985050508573ffffffffffffffffffffffffffffffffffffffff16898051906020012060001c73ffffffffffffffffffffffffffffffffffffffff16149750505050505050505b9392505050565b600080606060028560018601815181106129cc57fe5b602001015160f81c60f81b60f81c60ff16016040519080825280601f01601f191660200182016040528015612a105781602001600182028038833980820191505090505b509050612a2285858351846000611e09565b506060604080519080825280601f01601f191660200182016040528015612a585781602001600182028038833980820191505090505b509050612a6b8660046040846000611e09565b50606060626040519080825280601f01601f191660200182016040528015612aa25781602001600182028038833980820191505090505b509050600160f81b81600081518110612ab757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612af887604188036041846001611e09565b5060606040518060400160405280602081526020017ffd94fa71bc0ba10d39d464d0d8f465efeef0a2764e3887fcc9df41ded20f505c8152509050612b438160006020856042611e09565b50612bec6002836040518082805190602001908083835b60208310612b7d5780518252602082019150602081019050602083039250612b5a565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015612bbf573d6000803e3d6000fd5b5050506040513d6020811015612bd457600080fd5b810190808051906020019092919050505085856127f8565b945084612c0157600095505050505050612dc8565b606060405180606001604052806040815260200161389a604091399050606060426040519080825280601f01601f191660200182016040528015612c545781602001600182028038833980820191505090505b50905060fe60f81b81600081518110612c6957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612ca88a60036041846001611e09565b50606060028b604581518110612cba57fe5b602001015160f81c60f81b60f81c60ff16016040519080825280601f01601f191660200182016040528015612cfe5781602001600182028038833980820191505090505b509050612d118b60448351846000611e09565b50612dba6002836040518082805190602001908083835b60208310612d4b5780518252602082019150602081019050602083039250612d28565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015612d8d573d6000803e3d6000fd5b5050506040513d6020811015612da257600080fd5b810190808051906020019092919050505082856127f8565b975087985050505050505050505b92915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480612e5657506000612e54600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611383565b145b15612e6757612e65600061138e565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612ed157600080fd5b505af1158015612ee5573d6000803e3d6000fd5b505050506040513d6020811015612efb57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461304457600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612fc957600080fd5b505af1158015612fdd573d6000803e3d6000fd5b505050506040513d6020811015612ff357600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156130da5780820151818401526020810190506130bf565b50505050905090810190601f1680156131075780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b15801561312757600080fd5b505af115801561313b573d6000803e3d6000fd5b505050506040513d602081101561315157600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a764000001811115613184576000801b915050613329565b606061318f8561338e565b90506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b83811015613233578082015181840152602081019050613218565b50505050905090810190601f1680156132605780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b8381101561329957808201518184015260208101905061327e565b50505050905090810190601f1680156132c65780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b1580156132e857600080fd5b505af11580156132fc573d6000803e3d6000fd5b50505050506040513d602081101561331357600080fd5b8101908080519060200190929190505050925050505b9392505050565b80600290805190602001906133469291906137da565b5050565b60008060008060405188815287602082015286604082015285606082015260208160808360006001610bb8f192508051915050818193509350505094509492505050565b606061339861340e565b6133a061385a565b6133ac8161040061341a565b6133b581613464565b60008090505b83518110156133f7576133ea8482815181106133d357fe5b60200260200101518361347290919063ffffffff16565b80806001019150506133bb565b5061340181613497565b8060000151915050919050565b60405180590338823950565b600081905060006020828161342b57fe5b0614613444576020818161343b57fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b61346f8160046134a5565b50565b61347f82600283516134c6565b613492818361360690919063ffffffff16565b505050565b6134a28160076134a5565b50565b6134c2601f60058360ff16901b17836136b190919063ffffffff16565b5050565b601781116134f2576134ed8160058460ff16901b60ff1617846136b190919063ffffffff16565b613601565b60ff811161353357613517601860058460ff16901b17846136b190919063ffffffff16565b61352d816001856136f19092919063ffffffff16565b50613600565b61ffff811161357557613559601960058460ff16901b17846136b190919063ffffffff16565b61356f816002856136f19092919063ffffffff16565b506135ff565b63ffffffff81116135b95761359d601a60058460ff16901b17846136b190919063ffffffff16565b6135b3816004856136f19092919063ffffffff16565b506135fe565b67ffffffffffffffff81116135fd576135e5601b60058460ff16901b17846136b190919063ffffffff16565b6135fb816008856136f19092919063ffffffff16565b505b5b5b5b5b505050565b61360e61385a565b8260200151836000015151835101111561363e5761363d83600261363786602001518651613758565b02613774565b5b60008060008451905085518051602081830101945086518101825260208701935050505b602081106136855781518352602083019250602082019150602081039050613662565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b816020015160018360000151510111156136d7576136d6826002846020015102613774565b5b815180516020818301018381536001820183525050505050565b6136f961385a565b83602001518460000151518301111561372757613726846002613720876020015186613758565b02613774565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b60008183111561376a5782905061376e565b8190505b92915050565b606082600001519050613787838361341a565b6137918382613606565b50505050565b6040518060400160405280600015158152602001600081525090565b60405180608001604052806004905b60608152602001906001900390816137c25790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061381b57805160ff1916838001178555613849565b82800160010185558215613849579182015b8281111561384857825182559160200191906001019061382d565b5b5090506138569190613874565b5090565b604051806040016040528060608152602001600081525090565b61389691905b8082111561389257600081600090555060010161387a565b5090565b9056fe7fb956469c5c9b89840d55b43537e66a98dd4811ea0a27224272c2e5622911e8537a2f8e86a46baec82864e98dd01e9ccc2f8bc5dfc9cbe5a91a290498dd96e4a265627a7a723158201f01ee4de6fba8e981c50c323e7ccd5a47b5895d2cb9551ddb2525d71b590f0f64736f6c634300050c0032",
  "sourceMap": "58:2142:0:-;;;371:68;8:9:-1;5:2;;;30:1;27;20:12;5:2;371:68:0;399:35;11548:4:2;417:16:0;;399:17;;;:35;;:::i;:::-;58:2142;;37928:118:2;12187:1;12163:26;;12171:3;;;;;;;;;;;12163:26;;;12162:64;;;;12224:1;12195:25;12215:3;;;;;;;;;;;12195:11;;;:25;;:::i;:::-;:30;12162:64;12158:132;;;12243:35;11809:1;12243:19;;;:35;;:::i;:::-;;12158:132;12325:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12325:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12325:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12325:16:2;;;;;;;;;;;;;;;;12304:37;;12312:8;;;;;;;;;;;12304:37;;;12300:108;;12379:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12379:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12379:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12379:16:2;;;;;;;;;;;;;;;;12358:8;;:38;;;;;;;;;;;;;;;;;;12300:108;38008:8;;;;;;;;;;;:21;;;38030:7;38008:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;38008:30:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38008:30:2;;;;37928:118;:::o;38196:151::-;38255:10;38323:5;38311:18;38302:27;;38287:53;;;:::o;12912:208::-;12977:16;13091:21;:19;;;:21;;:::i;:::-;13084:28;;12912:208;;;:::o;13404:2070::-;13453:16;13544:1;13486:55;13498:42;13486:11;;;:55;;:::i;:::-;:59;13482:250;;;13598:42;13572:3;;:69;;;;;;;;;;;;;;;;;;13656:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;13716:4;13709:11;;;;13482:250;13804:1;13746:55;13758:42;13746:11;;;:55;;:::i;:::-;:59;13742:259;;;13866:42;13840:3;;:69;;;;;;;;;;;;;;;;;;13924:39;;;;;;;;;;;;;;;;;;:23;;;:39;;:::i;:::-;13985:4;13978:11;;;;13742:259;14073:1;14015:55;14027:42;14015:11;;;:55;;:::i;:::-;:59;14011:254;;;14133:42;14107:3;;:69;;;;;;;;;;;;;;;;;;14191:36;;;;;;;;;;;;;;;;;;:23;;;:36;;:::i;:::-;14249:4;14242:11;;;;14011:254;14337:1;14279:55;14291:42;14279:11;;;:55;;:::i;:::-;:59;14275:258;;;14399:42;14373:3;;:69;;;;;;;;;;;;;;;;;;14457:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;14517:4;14510:11;;;;14275:258;14605:1;14547:55;14559:42;14547:11;;;:55;;:::i;:::-;:59;14543:256;;;14666:42;14640:3;;:69;;;;;;;;;;;;;;;;;;14724:37;;;;;;;;;;;;;;;;;;:23;;;:37;;:::i;:::-;14783:4;14776:11;;;;14543:256;14871:1;14813:55;14825:42;14813:11;;;:55;;:::i;:::-;:59;14809:205;;;14933:42;14907:3;;:69;;;;;;;;;;;;;;;;;;14998:4;14991:11;;;;14809:205;15086:1;15028:55;15040:42;15028:11;;;:55;;:::i;:::-;:59;15024:204;;;15147:42;15121:3;;:69;;;;;;;;;;;;;;;;;;15212:4;15205:11;;;;15024:204;15300:1;15242:55;15254:42;15242:11;;;:55;;:::i;:::-;:59;15238:206;;;15363:42;15337:3;;:69;;;;;;;;;;;;;;;;;;15428:4;15421:11;;;;15238:206;15461:5;15454:12;;13404:2070;;:::o;13128:127::-;13234:13;13210:21;:37;;;;;;;;;;;;:::i;:::-;;13128:127;:::o;58:2142:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "58:2142:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15718:124:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15718:124:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15718:124:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15718:124:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15718:124:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15718:124:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15718:124:2;;;;;;;;;;;;;;;:::i;:::-;;444:610:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;444:610:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;444:610:0;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;444:610:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;444:610:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;444:610:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;444:610:0;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;444:610:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;444:610:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;444:610:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;444:610:0;;;;;;;;;;;;;;;:::i;:::-;;1059:506;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1059:506:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;98:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;98:49:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;98:49:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;153:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;153:47:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;153:47:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:44;;;:::i;:::-;;15718:124:2;15794:40;15805:5;15812:7;15831:1;15821:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;15821:12:2;;;;15794:10;:40::i;:::-;15718:124;;:::o;444:610:0:-;565:20;:18;:20::i;:::-;551:34;;:10;:34;;;543:43;;;;;;670:1;595:71;637:9;648:8;658:7;595:41;:71::i;:::-;:76;;;591:419;;;;;822:22;847:14;:25;862:9;847:25;;;;;;;;;;;;;;;;;;;;;822:50;;878:23;953:1;939:8;922:26;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;922:26:0;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;922:26:0;;;912:37;;;;;;904:46;;:50;;;;;;878:76;;960:44;972:14;988:15;960:11;:44::i;:::-;591:419;;;1023:14;:25;1038:9;1023:25;;;;;;;;;;;;1016:33;;;;;;;;;;;444:610;;;:::o;1059:506::-;1116:16;1141:27;;:::i;:::-;1171:11;:23;1183:10;1171:23;;;;;;;;;;;;;;;1141:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1227:1;1203:11;:20;;;:25;1199:342;;;1266:14;1239:11;:24;;:41;;;;;;;;;;;1309:9;1286:11;:20;;:32;;;;;1350:11;1324;:23;1336:10;1324:23;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1369:18;1390:39;1416:1;1419;1422:6;1390:25;:39::i;:::-;1369:60;;1464:10;1435:14;:26;1450:10;1435:26;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;1199:342;;;;1503:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1199:342;1555:4;1547:13;;;1059:506;;;:::o;98:49::-;;;;;;;;;;;;;;;;;;;;;;:::o;153:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1570:44::-;:::o;38056:132:2:-;38116:24;12187:1;12163:26;;12171:3;;;;;;;;;;;12163:26;;;12162:64;;;;12224:1;12195:25;12215:3;;;;;;;;;;;12195:11;:25::i;:::-;:30;12162:64;12158:132;;;12243:35;11809:1;12243:19;:35::i;:::-;;12158:132;12325:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12325:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12325:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12325:16:2;;;;;;;;;;;;;;;;12304:37;;12312:8;;;;;;;;;;;12304:37;;;12300:108;;12379:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12379:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12379:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12379:16:2;;;;;;;;;;;;;;;;12358:8;;:38;;;;;;;;;;;;;;;;;;12300:108;38160:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;38160:20:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38160:20:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;38160:20:2;;;;;;;;;;;;;;;;38153:27;;38056:132;:::o;51645:589::-;51776:17;51905:16;:6;51912:1;51905:9;;;;;;;;;;;;;;;;:16;;;;;51904:40;;;;51927:16;:6;51934:1;51927:9;;;;;;;;;;;;;;;;:16;;;;;51904:40;:74;;;;51975:1;51949:28;;51955:6;51962:1;51955:9;;;;;;;;;;;;;;;;51949:16;;:28;;;;51904:74;51900:115;;;52002:1;51995:8;;;;51900:115;52025:18;52046:96;52082:6;52090:8;52106:7;52116:25;:23;:25::i;:::-;52046:35;:96::i;:::-;52025:117;;52158:13;52153:55;;52195:1;52188:8;;;;;52153:55;52225:1;52218:8;;;51645:589;;;;;;:::o;1619:578:0:-;1702:15;1720:5;1702:23;;1732:27;;:::i;:::-;1762:11;:26;1774:13;1762:26;;;;;;;;;;;;;;;1732:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1793:26;1840:1;1822:14;:19;:34;;1852:4;1822:34;;;1844:5;1822:34;1793:63;;1893:21;1865:49;;:11;:24;;;:49;;;1861:242;;;1938:4;1925:17;;1948:13;1987:1;1964:11;:20;;;:24;1948:40;;1994:30;2043:13;1994:64;;2064:14;:23;;:33;2088:8;2064:33;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2064:33:0;1861:242;;;2116:11;:26;2128:13;2116:26;;;;;;;;;;;;;;;;2109:34;;;;;;;;;;;;;;;;;;;;;;;2155:37;2166:13;2181:10;2155:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1619:578;;;;;:::o;46129:2683:2:-;46231:16;46279:1;46269:7;:11;46268:32;;;;;46297:2;46286:7;:13;;46268:32;46260:41;;;;;;46322:2;46312:12;;;;46381:19;46413:1;46403:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46403:12:2;;;;46381:34;;46449:7;46438:20;;46426:6;46433:1;46426:9;;;;;;;;;;;:32;;;;;;;;;;;46469:19;46501:2;46491:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46491:13:2;;;;46469:35;;46515:27;46555:2;46545:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;46545:13:2;;;;46515:43;;46569:30;46602:40;:38;:40::i;:::-;46569:73;;46692:4;46684:6;46677:20;47045:9;47035:8;47031:24;47026:1;47018:6;47014:14;47004:25;47000:56;46993:4;46985:6;46981:17;46974:83;47094:4;47078:14;47071:28;47147:22;47140:4;47124:14;47120:25;47113:57;47191:18;47222:2;47212:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47212:13:2;;;;47191:34;;47285:6;47278:4;47271:5;47267:16;47260:32;47313:25;47351:1;47341:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47341:12:2;;;;47313:40;;47364;47374:5;47381:2;47385:1;47388:12;47402:1;47364:9;:40::i;:::-;;47415:20;;:::i;:::-;:62;;;;;;;;47439:6;47415:62;;;;47447:6;47415:62;;;;47455:14;47415:62;;;;47471:5;47415:62;;;;;47488:15;47506:47;;;;;;;;;;;;;;;;;;47531:4;47537:15;47506:14;:47::i;:::-;47488:65;;47564:30;47607:1;47597:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;47597:12:2;;;;47564:45;;47677:4;47663:12;47659:23;47653:30;47742:65;47739:1;47735:73;47728:4;47709:17;47705:28;47697:112;47868:63;47865:1;47861:71;47854:4;47835:17;47831:28;47823:110;47992:61;47989:1;47985:69;47978:4;47959:17;47955:28;47947:108;48114:59;48111:1;48107:67;48100:4;48081:17;48077:28;48069:106;48234:57;48231:1;48227:65;48220:4;48201:17;48197:28;48189:104;48352:55;48349:1;48345:63;48338:4;48319:17;48315:28;48307:102;48468:53;48465:1;48461:61;48454:4;48435:17;48431:28;48423:100;48582:51;48579:1;48575:59;48568:4;48549:17;48545:28;48537:98;47629:1017;48656:123;48688:7;48724:17;48743:4;48748:1;48743:7;;;;;;;;;;;48752:15;48759:4;48764:1;48759:7;;;;;;;;;;;48752:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48752:15:2;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;48752:15:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;48752:15:2;;;;;;;;;;;;;;;;48769:4;48774:1;48769:7;;;;;;;;;;;48707:70;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48707:70:2;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48707:70:2;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;48707:70:2;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;48707:70:2;;;48697:81;;;;;;48656:31;:123::i;:::-;48797:7;48790:14;;;;;;;;;;;46129:2683;;;;;:::o;38196:151::-;38255:10;38323:5;38311:18;38302:27;;38287:53;;;:::o;12912:208::-;12977:16;13091:21;:19;:21::i;:::-;13084:28;;12912:208;;;:::o;13263:133::-;13321:26;13367:21;13360:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13263:133;:::o;52653:2791::-;52805:19;52950:22;53024:2;53019:1;52996:6;53003:10;52996:18;;;;;;;;;;;;;;;;52990:25;;52985:31;;:35;52975:6;:46;:51;52950:76;;53037:20;53070:2;53060:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;53060:13:2;;;;53037:36;;53084:52;53094:6;53102:17;53121:2;53125:7;53134:1;53084:9;:52::i;:::-;;53202:48;53226:12;53240:8;53209:40;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;53209:40:2;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;53209:40:2;;;53202:48;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;53202:48:2;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;53202:48:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;53202:48:2;;;;;;;;;;;;;;;;53185:66;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;53185:66:2;;;53175:77;;;;;;53163:7;53153:18;;;;;;:99;53147:147;;53277:5;53270:12;;;;;;53147:147;53304:17;53399:1;53345:6;53392:1;53373:15;53352:17;:37;:41;53345:49;;;;;;;;;;;;;;;;53339:56;;53334:62;;:66;53324:77;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;53324:77:2;;;;53304:97;;53412:78;53422:6;53451:15;53430:17;:37;53469:4;:11;53482:4;53488:1;53412:9;:78::i;:::-;;53660:90;53679:12;53686:4;53679:12;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;53679:12:2;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;53679:12:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;53679:12:2;;;;;;;;;;;;;;;;53693:7;53713:6;53745:1;53740:2;53720:17;:22;:26;53713:34;;;;;;;;;;;;;;;;53707:41;;53702:47;;53660:18;:90::i;:::-;53655:136;;53774:5;53767:12;;;;;;;53655:136;54040:29;54082:10;54072:21;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;54072:21:2;;;;54040:53;;54104:74;54114:6;54142:2;54122:17;:22;54146:10;54158:16;54176:1;54104:9;:74::i;:::-;;54189:26;54228:2;54218:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;54218:13:2;;;;54189:42;;54242:15;54314:2;54300:4;:11;54286:10;54280:2;54260:17;:22;:37;:51;:56;54242:74;;54327:56;54337:6;54358:2;54345:10;:15;54362:2;54366:13;54381:1;54327:9;:56::i;:::-;;54394:25;54422:21;54429:13;54422:21;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;54422:21:2;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;54422:21:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;54422:21:2;;;;;;;;;;;;;;;;54394:49;;54521:16;54539:17;54504:53;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;54504:53:2;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;54504:53:2;;;54494:64;;;;;;54458:22;:32;54481:8;54458:32;;;;;;;;;;;;:100;54454:232;;;54624:22;:32;54647:8;54624:32;;;;;;;;;;;54617:39;;;54454:232;;;54681:5;54674:12;;;;;;;;;;;54454:232;54810:20;54843:15;54833:26;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;54833:26:2;;;;54810:49;;54870:65;54880:6;54888:17;54907:15;54924:7;54933:1;54870:9;:65::i;:::-;;54951:47;54961:15;54968:7;54961:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;54961:15:2;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;54961:15:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;54961:15:2;;;;;;;;;;;;;;;;54978:4;54984:13;54951:9;:47::i;:::-;54946:93;;55022:5;55015:12;;;;;;;;;;;;54946:93;55138:41;:60;55180:17;55138:60;;;;;;;;;;;;;;;;;;;;;55133:226;;55278:69;55328:6;55336:10;55278:49;:69::i;:::-;55215:41;:60;55257:17;55215:60;;;;;;;;;;;;:132;;;;;;;;;;;;;;;;;;55133:226;55376:41;:60;55418:17;55376:60;;;;;;;;;;;;;;;;;;;;;55369:67;;;;;;;;;;52653:2791;;;;;;;:::o;38499:171::-;38579:23;12187:1;12163:26;;12171:3;;;;;;;;;;;12163:26;;;12162:64;;;;12224:1;12195:25;12215:3;;;;;;;;;;;12195:11;:25::i;:::-;:30;12162:64;12158:132;;;12243:35;11809:1;12243:19;:35::i;:::-;;12158:132;12325:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12325:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12325:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12325:16:2;;;;;;;;;;;;;;;;12304:37;;12312:8;;;;;;;;;;;12304:37;;;12300:108;;12379:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12379:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12379:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12379:16:2;;;;;;;;;;;;;;;;12358:8;;:38;;;;;;;;;;;;;;;;;;12300:108;38622:8;;;;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;38622:40:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;38622:40:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;38622:40:2;;;;;;;;;;;;;;;;38615:47;;38499:171;:::o;55583:707::-;55711:25;55749:14;55776:9;55766:7;:19;55749:36;;55818:9;55804:3;:10;:23;;55796:32;;;;;;55884:6;55898:11;55893:2;:16;55884:25;;56001:6;56015:9;56010:2;:14;56001:23;;56035:227;56066:7;56052:11;56047:2;:16;:26;56042:1;:32;56035:227;;;56147:1;56140:5;56136:13;56130:20;56188:3;56184:1;56179:3;56175:11;56168:24;56100:107;56226:2;56221:7;;;;56248:2;56243:7;;;;56035:227;;;56279:3;56272:10;;;;;55583:707;;;;;;;:::o;35836:384::-;35956:11;12187:1;12163:26;;12171:3;;;;;;;;;;;12163:26;;;12162:64;;;;12224:1;12195:25;12215:3;;;;;;;;;;;12195:11;:25::i;:::-;:30;12162:64;12158:132;;;12243:35;11809:1;12243:19;:35::i;:::-;;12158:132;12325:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12325:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12325:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12325:16:2;;;;;;;;;;;;;;;;12304:37;;12312:8;;;;;;;;;;;12304:37;;;12300:108;;12379:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12379:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12379:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12379:16:2;;;;;;;;;;;;;;;;12358:8;;:38;;;;;;;;;;;;;;;;;;12300:108;35980:22;36017:1;36005:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35980:39;;36043:5;36049:1;36043:8;;;;;;;;;;;36030:7;36038:1;36030:10;;;;;;;;;;;;;:21;;;;36075:5;36081:1;36075:8;;;;;;;;;;;36062:7;36070:1;36062:10;;;;;;;;;;;;;:21;;;;36107:5;36113:1;36107:8;;;;;;;;;;;36094:7;36102:1;36094:10;;;;;;;;;;;;;:21;;;;36139:5;36145:1;36139:8;;;;;;;;;;;36126:7;36134:1;36126:10;;;;;;;;;;;;;:21;;;;36165:47;36180:11;36193:7;36202:9;36165:14;:47::i;:::-;36158:54;;;35836:384;;;;;:::o;48820:154::-;48955:11;48920:22;:32;48943:8;48920:32;;;;;;;;;;;:46;;;;48820:154;;:::o;13404:2070::-;13453:16;13544:1;13486:55;13498:42;13486:11;:55::i;:::-;:59;13482:250;;;13598:42;13572:3;;:69;;;;;;;;;;;;;;;;;;13656:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13716:4;13709:11;;;;13482:250;13804:1;13746:55;13758:42;13746:11;:55::i;:::-;:59;13742:259;;;13866:42;13840:3;;:69;;;;;;;;;;;;;;;;;;13924:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;13985:4;13978:11;;;;13742:259;14073:1;14015:55;14027:42;14015:11;:55::i;:::-;:59;14011:254;;;14133:42;14107:3;;:69;;;;;;;;;;;;;;;;;;14191:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;14249:4;14242:11;;;;14011:254;14337:1;14279:55;14291:42;14279:11;:55::i;:::-;:59;14275:258;;;14399:42;14373:3;;:69;;;;;;;;;;;;;;;;;;14457:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14517:4;14510:11;;;;14275:258;14605:1;14547:55;14559:42;14547:11;:55::i;:::-;:59;14543:256;;;14666:42;14640:3;;:69;;;;;;;;;;;;;;;;;;14724:37;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14783:4;14776:11;;;;14543:256;14871:1;14813:55;14825:42;14813:11;:55::i;:::-;:59;14809:205;;;14933:42;14907:3;;:69;;;;;;;;;;;;;;;;;;14998:4;14991:11;;;;14809:205;15086:1;15028:55;15040:42;15028:11;:55::i;:::-;:59;15024:204;;;15147:42;15121:3;;:69;;;;;;;;;;;;;;;;;;15212:4;15205:11;;;;15024:204;15300:1;15242:55;15254:42;15242:11;:55::i;:::-;:59;15238:206;;;15363:42;15337:3;;:69;;;;;;;;;;;;;;;;;;15428:4;15421:11;;;;15238:206;15461:5;15454:12;;13404:2070;;:::o;52242:403::-;52353:19;52385:11;52399:4;52385:18;;52440:13;52422:7;:14;:31;52414:40;;;;;;52470:9;52482:1;52470:13;;52465:149;52488:13;52485:1;:16;52465:149;;;52542:7;52550:1;52542:10;;;;;;;;;;;;;;;;52527:25;;;:8;52536:1;52527:11;;;;;;;;;;:25;;;;52523:80;;52582:5;52573:14;;52523:80;52503:3;;;;;;;52465:149;;;;52631:6;52624:13;;;52242:403;;;;;:::o;48982:1025::-;49081:17;49111:10;49132:14;49157:12;49180;49203:18;49234:2;49224:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;49224:13:2;;;;49203:34;;49248:11;49293:4;49278:7;49286:1;49278:10;;;;;;;;;;;;;;;;49272:17;;49267:23;;:30;49262:1;:36;49248:50;;49317:40;49327:7;49336:6;49344:2;49348:5;49355:1;49317:9;:40::i;:::-;49309:48;;49368:18;49399:2;49389:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;49389:13:2;;;;49368:34;;49423:6;49413:16;;;;49448:84;49458:7;49512:4;49488:7;49505:1;49496:6;:10;49488:19;;;;;;;;;;;;;;;;49482:26;;49477:32;;:39;49467:6;:50;49519:2;49523:5;49530:1;49448:9;:84::i;:::-;49440:92;;49592:2;49585:5;49581:14;49575:21;49567:29;;49635:2;49628:5;49624:14;49618:21;49610:29;;49678:41;49694:8;49704:2;49708:4;49714;49678:15;:41::i;:::-;49660:59;;;;;;;;49783:6;49734:55;;49768:7;49758:18;;;;;;49750:27;;49734:55;;;49730:270;;;49813:4;49806:11;;;;;;;;;;;49730:270;49868:41;49884:8;49894:2;49898:4;49904;49868:15;:41::i;:::-;49850:59;;;;;;;;49981:6;49932:55;;49966:7;49956:18;;;;;;49948:27;;49932:55;;;49924:64;;;;;;;;;48982:1025;;;;;;:::o;50015:1622::-;50131:19;50163:10;50326:17;50395:1;50367:6;50388:1;50374:11;:15;50367:23;;;;;;;;;;;;;;;;50361:30;;50356:36;;:40;50346:51;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;50346:51:2;;;;50326:71;;50408:52;50418:6;50426:11;50439:4;:11;50452:4;50458:1;50408:9;:52::i;:::-;;50471:27;50511:2;50501:13;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;50501:13:2;;;;50471:43;;50525:47;50535:6;50543:5;50550:2;50554:14;50570:1;50525:9;:47::i;:::-;;50583:20;50616:11;50606:22;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;50606:22:2;;;;50583:45;;50663:1;50652:14;;50639:7;50647:1;50639:10;;;;;;;;;;;:27;;;;;;;;;;;50684:51;50694:6;50716:2;50702:11;:16;50720:2;50724:7;50733:1;50684:9;:51::i;:::-;;50746:21;:93;;;;;;;;;;;;;;;;;;;50850:43;50860:8;50870:1;50873:2;50877:7;50886:6;50850:9;:43::i;:::-;;50912:48;50922:15;50929:7;50922:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;50922:15:2;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;50922:15:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;50922:15:2;;;;;;;;;;;;;;;;50939:4;50945:14;50912:9;:48::i;:::-;50904:56;;50976:5;50971:51;;51005:5;50998:12;;;;;;;;;50971:51;51125:22;:158;;;;;;;;;;;;;;;;;;;51294:20;51327:6;51317:17;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;51317:17:2;;;;51294:40;;51358:4;51345:17;;:7;51353:1;51345:10;;;;;;;;;;;:17;;;;;;;;;;;51373:36;51383:6;51391:1;51394:2;51398:7;51407:1;51373:9;:36::i;:::-;;51420:17;51484:1;51461:6;51468:10;51461:18;;;;;;;;;;;;;;;;51455:25;;51450:31;;:35;51440:46;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;51440:46:2;;;;51420:66;;51497:47;51507:6;51515;51523:4;:11;51536:4;51542:1;51497:9;:47::i;:::-;;51563:43;51573:15;51580:7;51573:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;51573:15:2;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;51573:15:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;51573:15:2;;;;;;;;;;;;;;;;51590:4;51596:9;51563;:43::i;:::-;51555:51;;51624:5;51617:12;;;;;;;;;;50015:1622;;;;;:::o;30239:461::-;30358:11;12187:1;12163:26;;12171:3;;;;;;;;;;;12163:26;;;12162:64;;;;12224:1;12195:25;12215:3;;;;;;;;;;;12195:11;:25::i;:::-;:30;12162:64;12158:132;;;12243:35;11809:1;12243:19;:35::i;:::-;;12158:132;12325:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12325:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12325:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12325:16:2;;;;;;;;;;;;;;;;12304:37;;12312:8;;;;;;;;;;;12304:37;;;12300:108;;12379:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12379:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12379:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12379:16:2;;;;;;;;;;;;;;;;12358:8;;:38;;;;;;;;;;;;;;;;;;12300:108;30382:10;30395:8;;;;;;;;;;;:17;;;30413:11;30426:9;30395:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30395:41:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30395:41:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30395:41:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;30395:41:2;;;;;;;;;;;;;;;;30382:54;;30483:9;30469:11;:23;30459:7;:33;30451:5;:41;30447:109;;;30516:1;30509:8;;;;;;;30447:109;30566:17;30586:14;30594:5;30586:7;:14::i;:::-;30566:34;;30618:8;;;;;;;;;;;:28;;;30653:5;30660:1;30663:11;30676:4;30682:9;30618:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30618:74:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;30618:74:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;30618:74:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;30618:74:2;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;30618:74:2;;;;;;;;;;;;;;;;30611:81;;;;12418:1;30239:461;;;;;:::o;13128:127::-;13234:13;13210:21;:37;;;;;;;;;;;;:::i;:::-;;13128:127;:::o;56502:1003::-;56594:13;56609:25;57049:8;57068:12;57133:4;57127:11;57165:5;57159:4;57152:19;57207:2;57202;57196:4;57192:13;57185:25;57246:2;57241;57235:4;57231:13;57224:25;57285:2;57280;57274:4;57270:13;57263:25;57343:2;57337:4;57332:3;57326:4;57323:1;57320;57314:4;57309:37;57302:44;;57453:4;57447:11;57439:19;;57100:369;57487:3;57492:4;57479:18;;;;;;56502:1003;;;;;;;:::o;45746:375::-;45807:26;45846:19;:17;:19::i;:::-;45876:24;;:::i;:::-;45911:22;45923:3;45928:4;45911:11;:22::i;:::-;45944:16;:3;:14;:16::i;:::-;45976:6;45985:1;45976:10;;45971:90;45992:4;:11;45988:1;:15;45971:90;;;46025:24;46041:4;46046:1;46041:7;;;;;;;;;;;;;;46025:3;:15;;:24;;;;:::i;:::-;46005:3;;;;;;;45971:90;;;;46071:17;:3;:15;:17::i;:::-;46106:3;:7;;;46099:14;;;45746:375;;;:::o;59237:175::-;59333:4;59327:11;59388:4;59381:5;59377:16;59367:8;59361:4;59352:42;59300:105;:::o;4367:446::-;4442:13;4458:9;4442:25;;4499:1;4493:2;4482:8;:13;;;;;;:18;4478:83;;4546:2;4535:8;:13;;;;;;4529:2;:20;4517:32;;;;4478:83;4587:8;4571:4;:13;;:24;;;;;4685:4;4679:11;4717:3;4711:4;4704:17;4747:1;4742:3;4735:14;4785:8;4780:3;4776:18;4770:4;4763:32;4653:153;;;;:::o;10765:130::-;10837:50;10864:4;8872:1;10837:26;:50::i;:::-;10765:130;:::o;10370:181::-;10464:49;10475:4;8822:1;10499:6;:13;10464:10;:49::i;:::-;10524:19;10536:6;10524:4;:11;;:19;;;;:::i;:::-;;10370:181;;:::o;11037:138::-;11110:57;11137:4;9037:1;11110:26;:57::i;:::-;11037:138;:::o;9793:147::-;9894:38;9928:2;9923:1;9913:6;:11;;;;9912:18;9894:4;:11;;:38;;;;:::i;:::-;9793:147;;:::o;9047:738::-;9159:2;9149:6;:12;9145:633;;9178:42;9212:6;9207:1;9197:6;:11;;;;9196:22;;;9178:4;:11;;:42;;;;:::i;:::-;9145:633;;;9252:4;9242:6;:14;9238:540;;9273:38;9307:2;9302:1;9292:6;:11;;;;9291:18;9273:4;:11;;:38;;;;:::i;:::-;9326:25;9341:6;9349:1;9326:4;:14;;:25;;;;;:::i;:::-;;9238:540;;;9383:6;9373;:16;9369:409;;9406:38;9440:2;9435:1;9425:6;:11;;;;9424:18;9406:4;:11;;:38;;;;:::i;:::-;9459:25;9474:6;9482:1;9459:4;:14;;:25;;;;;:::i;:::-;;9369:409;;;9516:10;9506:6;:20;9502:276;;9543:38;9577:2;9572:1;9562:6;:11;;;;9561:18;9543:4;:11;;:38;;;;:::i;:::-;9596:25;9611:6;9619:1;9596:4;:14;;:25;;;;;:::i;:::-;;9502:276;;;9653:18;9643:6;:28;9639:139;;9688:38;9722:2;9717:1;9707:6;:11;;;;9706:18;9688:4;:11;;:38;;;;:::i;:::-;9741:25;9756:6;9764:1;9741:4;:14;;:25;;;;;:::i;:::-;;9639:139;9502:276;9369:409;9238:540;9145:633;9047:738;;;:::o;5453:1241::-;5532:21;;:::i;:::-;5603:4;:13;;;5585:4;:8;;;:15;5570:5;:12;:30;:46;5566:129;;;5633:50;5640:4;5681:1;5646:32;5650:4;:13;;;5665:5;:12;5646:3;:32::i;:::-;:36;5633:6;:50::i;:::-;5566:129;5705:9;5725:8;5744;5755:5;:12;5744:23;;5822:4;5816:11;5898:6;5892:13;5986:2;5977:6;5969;5965:19;5961:28;5953:36;;6110:5;6104:12;6096:6;6092:25;6084:6;6077:41;6174:2;6167:5;6163:14;6156:21;;5787:401;;6198:212;6211:2;6204:3;:9;6198:212;;6330:3;6324:10;6318:4;6311:24;6372:2;6364:10;;;;6396:2;6389:9;;;;6222:2;6215:9;;;;6198:212;;;6420:9;6452:1;6445:3;6440:2;:8;6432:3;:17;:21;6420:33;;6547:4;6543:9;6537:3;6531:10;6527:26;6600:4;6593;6587:11;6583:22;6645:7;6635:8;6632:21;6626:4;6619:35;6497:168;;6682:4;6675:11;;;;;;5453:1241;;;;:::o;6988:586::-;7088:4;:13;;;7084:1;7066:4;:8;;;:15;:19;:35;7062:99;;;7118:31;7125:4;7147:1;7131:4;:13;;;:17;7118:6;:31::i;:::-;7062:99;7215:4;7209:11;7291:6;7285:13;7383:2;7374:6;7366;7362:19;7358:28;7482:5;7476:4;7468:20;7529:1;7521:6;7517:14;7509:6;7502:30;7180:387;;;;;:::o;7868:748::-;7953:21;;:::i;:::-;8016:4;:13;;;7998:4;:8;;;:15;7991:4;:22;:38;7987:113;;;8046:42;8053:4;8086:1;8059:24;8063:4;:13;;;8078:4;8059:3;:24::i;:::-;:28;8046:6;:42::i;:::-;7987:113;8110:9;8136:1;8129:4;8122:3;:11;:15;8110:27;;8192:4;8186:11;8268:6;8262:13;8360:4;8351:6;8343;8339:19;8335:30;8498:5;8490:4;8486:9;8479:4;8473:11;8469:27;8466:38;8460:4;8453:52;8546:4;8538:6;8534:17;8526:6;8519:33;8157:430;;;8604:4;8597:11;;;7868:748;;;;;:::o;5006:151::-;5059:9;5090:2;5085;:7;5081:49;;;5116:2;5109:9;;;;5081:49;5147:2;5140:9;;5006:151;;;;;:::o;4821:177::-;4897:19;4919:4;:8;;;4897:30;;4938:21;4943:4;4949:9;4938:4;:21::i;:::-;4970:20;4977:4;4983:6;4970;:20::i;:::-;;4821:177;;;:::o;58:2142:0:-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.5.12;\r\n\r\nimport \"./provableAPI.sol\";\r\n\r\ncontract CoinFlip is usingProvable\r\n{\r\n\tmapping(bytes32 => address) public userAddressMap;\r\n\r\n\tmapping(address => UserData) public userDataMap;\r\n\r\n\tstruct UserData\r\n\t{\r\n\t\tbool headTailFlag;\r\n\t\tuint betValue;\r\n\t}\r\n\r\n\tevent betResults(address userAddress, bool wonFlag);\r\n\r\n\tevent errorMessage(string message);\r\n\r\n\tconstructor() public\r\n\t{\r\n\t\tprovable_setProof(proofType_Ledger);\r\n\t}\r\n\r\n\tfunction __callback(bytes32 inQueryId, string memory inResult, bytes memory inProof) public\r\n\t{\r\n\t\trequire(msg.sender == provable_cbAddress());\r\n\t\tif (provable_randomDS_proofVerify__returnCode(inQueryId, inResult, inProof) != 0)\r\n\t\t{\r\n\t\t\t// Emit some error to the front end or ignore if this was someone trying to fake a win.  Need to look into this more.\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\taddress theUserAddress = userAddressMap[inQueryId];\r\n\t\t\tuint256 theRandomNumber = uint256(keccak256(abi.encodePacked(inResult))) % 2;\r\n\t\t\tcalcWinLoss(theUserAddress, theRandomNumber);\r\n\t\t}\r\n\r\n\t\tdelete(userAddressMap[inQueryId]);\r\n\t}\r\n\r\n\tfunction bet(bool inHeadTailFlag) public payable returns(bool successFlag)\r\n\t{\r\n\t\tUserData memory theUserData = userDataMap[msg.sender];\r\n\t\tif (theUserData.betValue == 0)\r\n\t\t{\r\n\t\t\ttheUserData.headTailFlag = inHeadTailFlag;\r\n\t\t\ttheUserData.betValue = msg.value;\r\n\t\t\tuserDataMap[msg.sender] = theUserData;\r\n\r\n\t\t\tbytes32 theQueryId = provable_newRandomDSQuery(0, 1, 200000);\r\n\t\t\tuserAddressMap[theQueryId] = msg.sender;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\temit errorMessage(\"Already Playing!\");\r\n\t\t}\r\n\r\n\t\treturn (true);\r\n\t}\r\n\r\n\tfunction depositETH() public payable\r\n\t{\r\n\t}\r\n\r\n\tfunction calcWinLoss(address inUserAddress, uint256 inRandomNumber) private\r\n\t{\r\n\t\tbool theWonFlag = false;\r\n\r\n\t\tUserData memory theUserData = userDataMap[inUserAddress];\r\n\t\tbool theRandomHeadTailFlag = inRandomNumber == 0 ? false : true;\r\n\t\tif (theUserData.headTailFlag == theRandomHeadTailFlag)\r\n\t\t{\r\n\t\t\ttheWonFlag = true;\r\n\t\t\tuint theValue = theUserData.betValue * 2;\r\n\t\t\taddress payable theUserAddress = address(uint160(inUserAddress));\r\n\t\t\ttheUserAddress.transfer(theValue);\r\n\t\t}\r\n\r\n\t\tdelete(userDataMap[inUserAddress]);\r\n\r\n\t\temit betResults(inUserAddress, theWonFlag);\r\n\t}\r\n}\r\n",
  "sourcePath": "C:/Users/glenm/Development/com/ivanontech/academy/coin-flip/coin-flip-eth/contracts/CoinFlip.sol",
  "ast": {
    "absolutePath": "/C/Users/glenm/Development/com/ivanontech/academy/coin-flip/coin-flip-eth/contracts/CoinFlip.sol",
    "exportedSymbols": {
      "CoinFlip": [
        231
      ]
    },
    "id": 232,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/C/Users/glenm/Development/com/ivanontech/academy/coin-flip/coin-flip-eth/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 232,
        "sourceUnit": 6585,
        "src": "27:27:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6584,
              "src": "79:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6584",
                "typeString": "contract usingProvable"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "79:13:0"
          }
        ],
        "contractDependencies": [
          6584
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 231,
        "linearizedBaseContracts": [
          231,
          6584
        ],
        "name": "CoinFlip",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8,
            "name": "userAddressMap",
            "nodeType": "VariableDeclaration",
            "scope": 231,
            "src": "98:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
              "typeString": "mapping(bytes32 => address)"
            },
            "typeName": {
              "id": 7,
              "keyType": {
                "id": 5,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "106:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "98:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                "typeString": "mapping(bytes32 => address)"
              },
              "valueType": {
                "id": 6,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "117:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 12,
            "name": "userDataMap",
            "nodeType": "VariableDeclaration",
            "scope": 231,
            "src": "153:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$17_storage_$",
              "typeString": "mapping(address => struct CoinFlip.UserData)"
            },
            "typeName": {
              "id": 11,
              "keyType": {
                "id": 9,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "161:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "153:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$17_storage_$",
                "typeString": "mapping(address => struct CoinFlip.UserData)"
              },
              "valueType": {
                "contractScope": null,
                "id": 10,
                "name": "UserData",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 17,
                "src": "172:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserData_$17_storage_ptr",
                  "typeString": "struct CoinFlip.UserData"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "CoinFlip.UserData",
            "id": 17,
            "members": [
              {
                "constant": false,
                "id": 14,
                "name": "headTailFlag",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "229:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 13,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "229:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "name": "betValue",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "251:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "251:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "UserData",
            "nodeType": "StructDefinition",
            "scope": 231,
            "src": "206:63:0",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 23,
            "name": "betResults",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "name": "userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "291:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "291:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "indexed": false,
                  "name": "wonFlag",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "312:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "312:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "290:35:0"
            },
            "src": "274:52:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 27,
            "name": "errorMessage",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "350:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "350:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "349:16:0"
            },
            "src": "331:35:0"
          },
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "394:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 31,
                        "name": "proofType_Ledger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 981,
                        "src": "417:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 30,
                      "name": "provable_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4395,
                      "src": "399:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "399:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "399:35:0"
                }
              ]
            },
            "documentation": null,
            "id": 35,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "382:2:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "394:0:0"
            },
            "scope": 231,
            "src": "371:68:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 92,
              "nodeType": "Block",
              "src": "538:516:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 45,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6599,
                            "src": "551:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "551:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 47,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4407,
                            "src": "565:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 48,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "565:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "551:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 44,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6602,
                        6603
                      ],
                      "referencedDeclaration": 6602,
                      "src": "543:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "543:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "543:43:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 53,
                          "name": "inQueryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "637:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 54,
                          "name": "inResult",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "648:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 55,
                          "name": "inProof",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "658:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 52,
                        "name": "provable_randomDS_proofVerify__returnCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6090,
                        "src": "595:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint8_$",
                          "typeString": "function (bytes32,string memory,bytes memory) returns (uint8)"
                        }
                      },
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "595:71:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "670:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "595:76:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 84,
                    "nodeType": "Block",
                    "src": "816:194:0",
                    "statements": [
                      {
                        "assignments": [
                          61
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 61,
                            "name": "theUserAddress",
                            "nodeType": "VariableDeclaration",
                            "scope": 84,
                            "src": "822:22:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 60,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "822:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 65,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 62,
                            "name": "userAddressMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "847:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                              "typeString": "mapping(bytes32 => address)"
                            }
                          },
                          "id": 64,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 63,
                            "name": "inQueryId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "862:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "847:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "822:50:0"
                      },
                      {
                        "assignments": [
                          67
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 67,
                            "name": "theRandomNumber",
                            "nodeType": "VariableDeclaration",
                            "scope": 84,
                            "src": "878:23:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 66,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "878:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 78,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 72,
                                        "name": "inResult",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 39,
                                        "src": "939:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 70,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6586,
                                        "src": "922:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 71,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "922:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 73,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "922:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 69,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6593,
                                  "src": "912:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 74,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "912:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 68,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "904:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
                            "id": 75,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "904:46:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 76,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "953:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "904:50:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "878:76:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 80,
                              "name": "theUserAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61,
                              "src": "972:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 81,
                              "name": "theRandomNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "988:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 79,
                            "name": "calcWinLoss",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 230,
                            "src": "960:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "960:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 83,
                        "nodeType": "ExpressionStatement",
                        "src": "960:44:0"
                      }
                    ]
                  },
                  "id": 85,
                  "nodeType": "IfStatement",
                  "src": "591:419:0",
                  "trueBody": {
                    "id": 59,
                    "nodeType": "Block",
                    "src": "676:128:0",
                    "statements": []
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "1016:33:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 86,
                            "name": "userAddressMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "1023:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                              "typeString": "mapping(bytes32 => address)"
                            }
                          },
                          "id": 88,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 87,
                            "name": "inQueryId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "1038:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "1023:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 89,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1022:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1016:33:0"
                }
              ]
            },
            "documentation": null,
            "id": 93,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "name": "inQueryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "464:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "name": "inResult",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "483:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41,
                  "name": "inProof",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "507:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "507:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "463:65:0"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "538:0:0"
            },
            "scope": 231,
            "src": "444:610:0",
            "stateMutability": "nonpayable",
            "superFunction": 1337,
            "visibility": "public"
          },
          {
            "body": {
              "id": 156,
              "nodeType": "Block",
              "src": "1136:429:0",
              "statements": [
                {
                  "assignments": [
                    101
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101,
                      "name": "theUserData",
                      "nodeType": "VariableDeclaration",
                      "scope": 156,
                      "src": "1141:27:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserData_$17_memory_ptr",
                        "typeString": "struct CoinFlip.UserData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 100,
                        "name": "UserData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 17,
                        "src": "1141:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$17_storage_ptr",
                          "typeString": "struct CoinFlip.UserData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 106,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 102,
                      "name": "userDataMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1171:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$17_storage_$",
                        "typeString": "mapping(address => struct CoinFlip.UserData storage ref)"
                      }
                    },
                    "id": 105,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 103,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6599,
                        "src": "1183:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1183:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1171:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserData_$17_storage",
                      "typeString": "struct CoinFlip.UserData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1141:53:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 107,
                        "name": "theUserData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101,
                        "src": "1203:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$17_memory_ptr",
                          "typeString": "struct CoinFlip.UserData memory"
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "betValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "1203:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1227:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1203:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 151,
                    "nodeType": "Block",
                    "src": "1492:49:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "416c726561647920506c6179696e6721",
                              "id": 148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1516:18:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3f555d3611d75107c90d6c966797c6f78369713b86524b41aa9a3fd2bffac95f",
                                "typeString": "literal_string \"Already Playing!\""
                              },
                              "value": "Already Playing!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_3f555d3611d75107c90d6c966797c6f78369713b86524b41aa9a3fd2bffac95f",
                                "typeString": "literal_string \"Already Playing!\""
                              }
                            ],
                            "id": 147,
                            "name": "errorMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1503:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1503:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 150,
                        "nodeType": "EmitStatement",
                        "src": "1498:37:0"
                      }
                    ]
                  },
                  "id": 152,
                  "nodeType": "IfStatement",
                  "src": "1199:342:0",
                  "trueBody": {
                    "id": 146,
                    "nodeType": "Block",
                    "src": "1233:247:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 111,
                              "name": "theUserData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "1239:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserData_$17_memory_ptr",
                                "typeString": "struct CoinFlip.UserData memory"
                              }
                            },
                            "id": 113,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "headTailFlag",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14,
                            "src": "1239:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 114,
                            "name": "inHeadTailFlag",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "1266:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1239:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 116,
                        "nodeType": "ExpressionStatement",
                        "src": "1239:41:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 117,
                              "name": "theUserData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "1286:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserData_$17_memory_ptr",
                                "typeString": "struct CoinFlip.UserData memory"
                              }
                            },
                            "id": 119,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "betValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16,
                            "src": "1286:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 120,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6599,
                              "src": "1309:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1309:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1286:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 123,
                        "nodeType": "ExpressionStatement",
                        "src": "1286:32:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 124,
                              "name": "userDataMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "1324:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$17_storage_$",
                                "typeString": "mapping(address => struct CoinFlip.UserData storage ref)"
                              }
                            },
                            "id": 127,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 125,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6599,
                                "src": "1336:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1336:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1324:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserData_$17_storage",
                              "typeString": "struct CoinFlip.UserData storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 128,
                            "name": "theUserData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "1350:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserData_$17_memory_ptr",
                              "typeString": "struct CoinFlip.UserData memory"
                            }
                          },
                          "src": "1324:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserData_$17_storage",
                            "typeString": "struct CoinFlip.UserData storage ref"
                          }
                        },
                        "id": 130,
                        "nodeType": "ExpressionStatement",
                        "src": "1324:37:0"
                      },
                      {
                        "assignments": [
                          132
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 132,
                            "name": "theQueryId",
                            "nodeType": "VariableDeclaration",
                            "scope": 146,
                            "src": "1369:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 131,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1369:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 138,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1416:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1419:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "323030303030",
                              "id": 136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1422:6:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_200000_by_1",
                                "typeString": "int_const 200000"
                              },
                              "value": "200000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_200000_by_1",
                                "typeString": "int_const 200000"
                              }
                            ],
                            "id": 133,
                            "name": "provable_newRandomDSQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5686,
                            "src": "1390:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                            }
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1390:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1369:60:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 139,
                              "name": "userAddressMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "1435:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                                "typeString": "mapping(bytes32 => address)"
                              }
                            },
                            "id": 141,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 140,
                              "name": "theQueryId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 132,
                              "src": "1450:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1435:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 142,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6599,
                              "src": "1464:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1464:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1435:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 145,
                        "nodeType": "ExpressionStatement",
                        "src": "1435:39:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1555:4:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "id": 154,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1554:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 99,
                  "id": 155,
                  "nodeType": "Return",
                  "src": "1547:13:0"
                }
              ]
            },
            "documentation": null,
            "id": 157,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "name": "inHeadTailFlag",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "1072:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1072:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1071:21:0"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "name": "successFlag",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "1116:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1115:18:0"
            },
            "scope": 231,
            "src": "1059:506:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 160,
              "nodeType": "Block",
              "src": "1609:5:0",
              "statements": []
            },
            "documentation": null,
            "id": 161,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositETH",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1589:2:0"
            },
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1609:0:0"
            },
            "scope": 231,
            "src": "1570:44:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 229,
              "nodeType": "Block",
              "src": "1697:500:0",
              "statements": [
                {
                  "assignments": [
                    169
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 169,
                      "name": "theWonFlag",
                      "nodeType": "VariableDeclaration",
                      "scope": 229,
                      "src": "1702:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 168,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1702:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 171,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1720:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1702:23:0"
                },
                {
                  "assignments": [
                    173
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 173,
                      "name": "theUserData",
                      "nodeType": "VariableDeclaration",
                      "scope": 229,
                      "src": "1732:27:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserData_$17_memory_ptr",
                        "typeString": "struct CoinFlip.UserData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 172,
                        "name": "UserData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 17,
                        "src": "1732:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$17_storage_ptr",
                          "typeString": "struct CoinFlip.UserData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 177,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 174,
                      "name": "userDataMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1762:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$17_storage_$",
                        "typeString": "mapping(address => struct CoinFlip.UserData storage ref)"
                      }
                    },
                    "id": 176,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 175,
                      "name": "inUserAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "1774:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1762:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserData_$17_storage",
                      "typeString": "struct CoinFlip.UserData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1732:56:0"
                },
                {
                  "assignments": [
                    179
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 179,
                      "name": "theRandomHeadTailFlag",
                      "nodeType": "VariableDeclaration",
                      "scope": 229,
                      "src": "1793:26:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 178,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1793:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 186,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 180,
                        "name": "inRandomNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "1822:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1840:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1822:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1852:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1822:34:0",
                    "trueExpression": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1844:5:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1793:63:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 187,
                        "name": "theUserData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "1865:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$17_memory_ptr",
                          "typeString": "struct CoinFlip.UserData memory"
                        }
                      },
                      "id": 188,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "headTailFlag",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "1865:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 189,
                      "name": "theRandomHeadTailFlag",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "1893:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1865:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 217,
                  "nodeType": "IfStatement",
                  "src": "1861:242:0",
                  "trueBody": {
                    "id": 216,
                    "nodeType": "Block",
                    "src": "1919:184:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 191,
                            "name": "theWonFlag",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "1925:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1938:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1925:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 194,
                        "nodeType": "ExpressionStatement",
                        "src": "1925:17:0"
                      },
                      {
                        "assignments": [
                          196
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 196,
                            "name": "theValue",
                            "nodeType": "VariableDeclaration",
                            "scope": 216,
                            "src": "1948:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 195,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "1948:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 201,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 197,
                              "name": "theUserData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 173,
                              "src": "1964:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserData_$17_memory_ptr",
                                "typeString": "struct CoinFlip.UserData memory"
                              }
                            },
                            "id": 198,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "betValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16,
                            "src": "1964:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1987:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "1964:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1948:40:0"
                      },
                      {
                        "assignments": [
                          203
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 203,
                            "name": "theUserAddress",
                            "nodeType": "VariableDeclaration",
                            "scope": 216,
                            "src": "1994:30:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 202,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1994:15:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 209,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 206,
                                  "name": "inUserAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 163,
                                  "src": "2043:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2035:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint160_$",
                                  "typeString": "type(uint160)"
                                },
                                "typeName": "uint160"
                              },
                              "id": 207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2035:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            ],
                            "id": 204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2027:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2027:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1994:64:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 213,
                              "name": "theValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 196,
                              "src": "2088:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 210,
                              "name": "theUserAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 203,
                              "src": "2064:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2064:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2064:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 215,
                        "nodeType": "ExpressionStatement",
                        "src": "2064:33:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2109:34:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 218,
                            "name": "userDataMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "2116:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$17_storage_$",
                              "typeString": "mapping(address => struct CoinFlip.UserData storage ref)"
                            }
                          },
                          "id": 220,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 219,
                            "name": "inUserAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 163,
                            "src": "2128:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "2116:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserData_$17_storage",
                            "typeString": "struct CoinFlip.UserData storage ref"
                          }
                        }
                      ],
                      "id": 221,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2115:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserData_$17_storage",
                        "typeString": "struct CoinFlip.UserData storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "2109:34:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 225,
                        "name": "inUserAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "2166:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 226,
                        "name": "theWonFlag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 169,
                        "src": "2181:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 224,
                      "name": "betResults",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "2155:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2155:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 228,
                  "nodeType": "EmitStatement",
                  "src": "2150:42:0"
                }
              ]
            },
            "documentation": null,
            "id": 230,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calcWinLoss",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "name": "inUserAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 230,
                  "src": "1640:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1640:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "name": "inRandomNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 230,
                  "src": "1663:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1663:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1639:47:0"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1697:0:0"
            },
            "scope": 231,
            "src": "1619:578:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 232,
        "src": "58:2142:0"
      }
    ],
    "src": "0:2202:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/glenm/Development/com/ivanontech/academy/coin-flip/coin-flip-eth/contracts/CoinFlip.sol",
    "exportedSymbols": {
      "CoinFlip": [
        231
      ]
    },
    "id": 232,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/C/Users/glenm/Development/com/ivanontech/academy/coin-flip/coin-flip-eth/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 232,
        "sourceUnit": 6585,
        "src": "27:27:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6584,
              "src": "79:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$6584",
                "typeString": "contract usingProvable"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "79:13:0"
          }
        ],
        "contractDependencies": [
          6584
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 231,
        "linearizedBaseContracts": [
          231,
          6584
        ],
        "name": "CoinFlip",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8,
            "name": "userAddressMap",
            "nodeType": "VariableDeclaration",
            "scope": 231,
            "src": "98:49:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
              "typeString": "mapping(bytes32 => address)"
            },
            "typeName": {
              "id": 7,
              "keyType": {
                "id": 5,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "106:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "98:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                "typeString": "mapping(bytes32 => address)"
              },
              "valueType": {
                "id": 6,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "117:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 12,
            "name": "userDataMap",
            "nodeType": "VariableDeclaration",
            "scope": 231,
            "src": "153:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$17_storage_$",
              "typeString": "mapping(address => struct CoinFlip.UserData)"
            },
            "typeName": {
              "id": 11,
              "keyType": {
                "id": 9,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "161:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "153:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$17_storage_$",
                "typeString": "mapping(address => struct CoinFlip.UserData)"
              },
              "valueType": {
                "contractScope": null,
                "id": 10,
                "name": "UserData",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 17,
                "src": "172:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserData_$17_storage_ptr",
                  "typeString": "struct CoinFlip.UserData"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "CoinFlip.UserData",
            "id": 17,
            "members": [
              {
                "constant": false,
                "id": 14,
                "name": "headTailFlag",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "229:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 13,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "229:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "name": "betValue",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "251:13:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "251:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "UserData",
            "nodeType": "StructDefinition",
            "scope": 231,
            "src": "206:63:0",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 23,
            "name": "betResults",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "name": "userAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "291:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "291:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "indexed": false,
                  "name": "wonFlag",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "312:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "312:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "290:35:0"
            },
            "src": "274:52:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 27,
            "name": "errorMessage",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "indexed": false,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "350:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "350:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "349:16:0"
            },
            "src": "331:35:0"
          },
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "394:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 31,
                        "name": "proofType_Ledger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 981,
                        "src": "417:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 30,
                      "name": "provable_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4395,
                      "src": "399:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "399:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "399:35:0"
                }
              ]
            },
            "documentation": null,
            "id": 35,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "382:2:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "394:0:0"
            },
            "scope": 231,
            "src": "371:68:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 92,
              "nodeType": "Block",
              "src": "538:516:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 45,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6599,
                            "src": "551:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "551:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 47,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4407,
                            "src": "565:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 48,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "565:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "551:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 44,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6602,
                        6603
                      ],
                      "referencedDeclaration": 6602,
                      "src": "543:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "543:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "543:43:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 53,
                          "name": "inQueryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "637:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 54,
                          "name": "inResult",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "648:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 55,
                          "name": "inProof",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "658:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 52,
                        "name": "provable_randomDS_proofVerify__returnCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6090,
                        "src": "595:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint8_$",
                          "typeString": "function (bytes32,string memory,bytes memory) returns (uint8)"
                        }
                      },
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "595:71:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "670:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "595:76:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 84,
                    "nodeType": "Block",
                    "src": "816:194:0",
                    "statements": [
                      {
                        "assignments": [
                          61
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 61,
                            "name": "theUserAddress",
                            "nodeType": "VariableDeclaration",
                            "scope": 84,
                            "src": "822:22:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 60,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "822:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 65,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 62,
                            "name": "userAddressMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "847:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                              "typeString": "mapping(bytes32 => address)"
                            }
                          },
                          "id": 64,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 63,
                            "name": "inQueryId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "862:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "847:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "822:50:0"
                      },
                      {
                        "assignments": [
                          67
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 67,
                            "name": "theRandomNumber",
                            "nodeType": "VariableDeclaration",
                            "scope": 84,
                            "src": "878:23:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 66,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "878:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 78,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 72,
                                        "name": "inResult",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 39,
                                        "src": "939:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 70,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6586,
                                        "src": "922:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 71,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "922:16:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 73,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "922:26:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 69,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6593,
                                  "src": "912:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 74,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "912:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 68,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "904:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
                            "id": 75,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "904:46:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 76,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "953:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "904:50:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "878:76:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 80,
                              "name": "theUserAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61,
                              "src": "972:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 81,
                              "name": "theRandomNumber",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "988:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 79,
                            "name": "calcWinLoss",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 230,
                            "src": "960:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "960:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 83,
                        "nodeType": "ExpressionStatement",
                        "src": "960:44:0"
                      }
                    ]
                  },
                  "id": 85,
                  "nodeType": "IfStatement",
                  "src": "591:419:0",
                  "trueBody": {
                    "id": 59,
                    "nodeType": "Block",
                    "src": "676:128:0",
                    "statements": []
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "1016:33:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 86,
                            "name": "userAddressMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "1023:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                              "typeString": "mapping(bytes32 => address)"
                            }
                          },
                          "id": 88,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 87,
                            "name": "inQueryId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "1038:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "1023:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 89,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1022:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1016:33:0"
                }
              ]
            },
            "documentation": null,
            "id": 93,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "name": "inQueryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "464:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39,
                  "name": "inResult",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "483:22:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41,
                  "name": "inProof",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "507:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "507:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "463:65:0"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "538:0:0"
            },
            "scope": 231,
            "src": "444:610:0",
            "stateMutability": "nonpayable",
            "superFunction": 1337,
            "visibility": "public"
          },
          {
            "body": {
              "id": 156,
              "nodeType": "Block",
              "src": "1136:429:0",
              "statements": [
                {
                  "assignments": [
                    101
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101,
                      "name": "theUserData",
                      "nodeType": "VariableDeclaration",
                      "scope": 156,
                      "src": "1141:27:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserData_$17_memory_ptr",
                        "typeString": "struct CoinFlip.UserData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 100,
                        "name": "UserData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 17,
                        "src": "1141:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$17_storage_ptr",
                          "typeString": "struct CoinFlip.UserData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 106,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 102,
                      "name": "userDataMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1171:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$17_storage_$",
                        "typeString": "mapping(address => struct CoinFlip.UserData storage ref)"
                      }
                    },
                    "id": 105,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 103,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6599,
                        "src": "1183:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1183:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1171:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserData_$17_storage",
                      "typeString": "struct CoinFlip.UserData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1141:53:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 107,
                        "name": "theUserData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101,
                        "src": "1203:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$17_memory_ptr",
                          "typeString": "struct CoinFlip.UserData memory"
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "betValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16,
                      "src": "1203:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1227:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1203:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 151,
                    "nodeType": "Block",
                    "src": "1492:49:0",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "416c726561647920506c6179696e6721",
                              "id": 148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1516:18:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3f555d3611d75107c90d6c966797c6f78369713b86524b41aa9a3fd2bffac95f",
                                "typeString": "literal_string \"Already Playing!\""
                              },
                              "value": "Already Playing!"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_3f555d3611d75107c90d6c966797c6f78369713b86524b41aa9a3fd2bffac95f",
                                "typeString": "literal_string \"Already Playing!\""
                              }
                            ],
                            "id": 147,
                            "name": "errorMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1503:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1503:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 150,
                        "nodeType": "EmitStatement",
                        "src": "1498:37:0"
                      }
                    ]
                  },
                  "id": 152,
                  "nodeType": "IfStatement",
                  "src": "1199:342:0",
                  "trueBody": {
                    "id": 146,
                    "nodeType": "Block",
                    "src": "1233:247:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 111,
                              "name": "theUserData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "1239:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserData_$17_memory_ptr",
                                "typeString": "struct CoinFlip.UserData memory"
                              }
                            },
                            "id": 113,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "headTailFlag",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14,
                            "src": "1239:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 114,
                            "name": "inHeadTailFlag",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "1266:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1239:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 116,
                        "nodeType": "ExpressionStatement",
                        "src": "1239:41:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 117,
                              "name": "theUserData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "1286:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserData_$17_memory_ptr",
                                "typeString": "struct CoinFlip.UserData memory"
                              }
                            },
                            "id": 119,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "betValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16,
                            "src": "1286:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 120,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6599,
                              "src": "1309:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1309:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1286:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 123,
                        "nodeType": "ExpressionStatement",
                        "src": "1286:32:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 124,
                              "name": "userDataMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "1324:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$17_storage_$",
                                "typeString": "mapping(address => struct CoinFlip.UserData storage ref)"
                              }
                            },
                            "id": 127,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 125,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6599,
                                "src": "1336:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1336:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1324:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserData_$17_storage",
                              "typeString": "struct CoinFlip.UserData storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 128,
                            "name": "theUserData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "1350:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserData_$17_memory_ptr",
                              "typeString": "struct CoinFlip.UserData memory"
                            }
                          },
                          "src": "1324:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserData_$17_storage",
                            "typeString": "struct CoinFlip.UserData storage ref"
                          }
                        },
                        "id": 130,
                        "nodeType": "ExpressionStatement",
                        "src": "1324:37:0"
                      },
                      {
                        "assignments": [
                          132
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 132,
                            "name": "theQueryId",
                            "nodeType": "VariableDeclaration",
                            "scope": 146,
                            "src": "1369:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 131,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1369:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 138,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1416:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 135,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1419:1:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "323030303030",
                              "id": 136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1422:6:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_200000_by_1",
                                "typeString": "int_const 200000"
                              },
                              "value": "200000"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              {
                                "typeIdentifier": "t_rational_200000_by_1",
                                "typeString": "int_const 200000"
                              }
                            ],
                            "id": 133,
                            "name": "provable_newRandomDSQuery",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5686,
                            "src": "1390:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                            }
                          },
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1390:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1369:60:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 139,
                              "name": "userAddressMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "1435:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                                "typeString": "mapping(bytes32 => address)"
                              }
                            },
                            "id": 141,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 140,
                              "name": "theQueryId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 132,
                              "src": "1450:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1435:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 142,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6599,
                              "src": "1464:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1464:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1435:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 145,
                        "nodeType": "ExpressionStatement",
                        "src": "1435:39:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1555:4:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "id": 154,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1554:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 99,
                  "id": 155,
                  "nodeType": "Return",
                  "src": "1547:13:0"
                }
              ]
            },
            "documentation": null,
            "id": 157,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "name": "inHeadTailFlag",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "1072:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1072:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1071:21:0"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "name": "successFlag",
                  "nodeType": "VariableDeclaration",
                  "scope": 157,
                  "src": "1116:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1115:18:0"
            },
            "scope": 231,
            "src": "1059:506:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 160,
              "nodeType": "Block",
              "src": "1609:5:0",
              "statements": []
            },
            "documentation": null,
            "id": 161,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositETH",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1589:2:0"
            },
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1609:0:0"
            },
            "scope": 231,
            "src": "1570:44:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 229,
              "nodeType": "Block",
              "src": "1697:500:0",
              "statements": [
                {
                  "assignments": [
                    169
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 169,
                      "name": "theWonFlag",
                      "nodeType": "VariableDeclaration",
                      "scope": 229,
                      "src": "1702:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 168,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1702:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 171,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1720:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1702:23:0"
                },
                {
                  "assignments": [
                    173
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 173,
                      "name": "theUserData",
                      "nodeType": "VariableDeclaration",
                      "scope": 229,
                      "src": "1732:27:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserData_$17_memory_ptr",
                        "typeString": "struct CoinFlip.UserData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 172,
                        "name": "UserData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 17,
                        "src": "1732:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$17_storage_ptr",
                          "typeString": "struct CoinFlip.UserData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 177,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 174,
                      "name": "userDataMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1762:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$17_storage_$",
                        "typeString": "mapping(address => struct CoinFlip.UserData storage ref)"
                      }
                    },
                    "id": 176,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 175,
                      "name": "inUserAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "1774:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1762:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserData_$17_storage",
                      "typeString": "struct CoinFlip.UserData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1732:56:0"
                },
                {
                  "assignments": [
                    179
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 179,
                      "name": "theRandomHeadTailFlag",
                      "nodeType": "VariableDeclaration",
                      "scope": 229,
                      "src": "1793:26:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 178,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1793:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 186,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 180,
                        "name": "inRandomNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "1822:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1840:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1822:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1852:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1822:34:0",
                    "trueExpression": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1844:5:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1793:63:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 187,
                        "name": "theUserData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "1865:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserData_$17_memory_ptr",
                          "typeString": "struct CoinFlip.UserData memory"
                        }
                      },
                      "id": 188,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "headTailFlag",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "1865:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 189,
                      "name": "theRandomHeadTailFlag",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 179,
                      "src": "1893:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1865:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 217,
                  "nodeType": "IfStatement",
                  "src": "1861:242:0",
                  "trueBody": {
                    "id": 216,
                    "nodeType": "Block",
                    "src": "1919:184:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 191,
                            "name": "theWonFlag",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "1925:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1938:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1925:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 194,
                        "nodeType": "ExpressionStatement",
                        "src": "1925:17:0"
                      },
                      {
                        "assignments": [
                          196
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 196,
                            "name": "theValue",
                            "nodeType": "VariableDeclaration",
                            "scope": 216,
                            "src": "1948:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 195,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "1948:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 201,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 197,
                              "name": "theUserData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 173,
                              "src": "1964:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserData_$17_memory_ptr",
                                "typeString": "struct CoinFlip.UserData memory"
                              }
                            },
                            "id": 198,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "betValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16,
                            "src": "1964:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 199,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1987:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "1964:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1948:40:0"
                      },
                      {
                        "assignments": [
                          203
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 203,
                            "name": "theUserAddress",
                            "nodeType": "VariableDeclaration",
                            "scope": 216,
                            "src": "1994:30:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            "typeName": {
                              "id": 202,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1994:15:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 209,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 206,
                                  "name": "inUserAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 163,
                                  "src": "2043:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2035:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint160_$",
                                  "typeString": "type(uint160)"
                                },
                                "typeName": "uint160"
                              },
                              "id": 207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2035:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            ],
                            "id": 204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2027:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2027:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1994:64:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 213,
                              "name": "theValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 196,
                              "src": "2088:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 210,
                              "name": "theUserAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 203,
                              "src": "2064:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2064:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2064:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 215,
                        "nodeType": "ExpressionStatement",
                        "src": "2064:33:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2109:34:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 218,
                            "name": "userDataMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "2116:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserData_$17_storage_$",
                              "typeString": "mapping(address => struct CoinFlip.UserData storage ref)"
                            }
                          },
                          "id": 220,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 219,
                            "name": "inUserAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 163,
                            "src": "2128:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "2116:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserData_$17_storage",
                            "typeString": "struct CoinFlip.UserData storage ref"
                          }
                        }
                      ],
                      "id": 221,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2115:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserData_$17_storage",
                        "typeString": "struct CoinFlip.UserData storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "2109:34:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 225,
                        "name": "inUserAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "2166:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 226,
                        "name": "theWonFlag",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 169,
                        "src": "2181:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 224,
                      "name": "betResults",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "2155:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2155:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 228,
                  "nodeType": "EmitStatement",
                  "src": "2150:42:0"
                }
              ]
            },
            "documentation": null,
            "id": 230,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calcWinLoss",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "name": "inUserAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 230,
                  "src": "1640:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1640:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "name": "inRandomNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 230,
                  "src": "1663:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1663:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1639:47:0"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1697:0:0"
            },
            "scope": 231,
            "src": "1619:578:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 232,
        "src": "58:2142:0"
      }
    ],
    "src": "0:2202:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x5b29a57348de5e70d48abf9fbdf5094bb6cff88a1da40e6128c9cfa22703455a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "wonFlag",
              "type": "bool"
            }
          ],
          "name": "betResults",
          "type": "event"
        },
        "0x0a57a1b34cbb6b1e06b8b22be21efd71de17250f818bad53ccdc7af913535199": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "message",
              "type": "string"
            }
          ],
          "name": "errorMessage",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xF66dB23B559ADcd885CBec6C2598496bD807D134",
      "transactionHash": "0x2b6881961a7c118c20d5e1b9db50e54dd4b9cbbf646b4bf3fec2ca239822e09e"
    },
    "5777": {
      "events": {
        "0x5b29a57348de5e70d48abf9fbdf5094bb6cff88a1da40e6128c9cfa22703455a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "wonFlag",
              "type": "bool"
            }
          ],
          "name": "betResults",
          "type": "event"
        },
        "0x0a57a1b34cbb6b1e06b8b22be21efd71de17250f818bad53ccdc7af913535199": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "message",
              "type": "string"
            }
          ],
          "name": "errorMessage",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xE67421489683C91285EF99769881616EA34781DB",
      "transactionHash": "0x55e6b622da3e96f7ec86094f45df2f82d48151fdbeab5bbe59df3cd81659f289"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-16T00:08:04.980Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "__callback(bytes32,string)": {
        "details": "The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}